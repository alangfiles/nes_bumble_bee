;
; File generated by cc65 v 2.18 - N/A
;
	.fopt		compiler,"cc65 v 2.18 - N/A"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.forceimport	__STARTUP__
	.import		_pal_bg
	.import		_pal_spr
	.import		_ppu_wait_nmi
	.import		_ppu_off
	.import		_ppu_on_all
	.import		_oam_clear
	.import		_oam_meta_spr
	.import		_music_play
	.import		_music_stop
	.import		_sfx_play
	.import		_pad_poll
	.import		_bank_spr
	.import		_vram_adr
	.import		_vram_put
	.import		_delay
	.import		_set_vram_buffer
	.import		_one_vram_buffer
	.import		_multi_vram_buffer_horz
	.import		_clear_vram_buffer
	.import		_set_scroll_y
	.import		_flush_vram_update2
	.import		_pad_poll_4score_1_3
	.import		_pad_poll_4score_2_4
	.export		_gamesprites_smallbee1left0_data
	.export		_gamesprites_smallbee2left0_data
	.export		_gamesprites_smallbeeleft1_data
	.export		_gamesprites_smallbeeleft2_data
	.export		_gamesprites_smallbeeright0_data
	.export		_gamesprites_smallbeeright1_data
	.export		_gamesprites_smallbeeright2_data
	.export		_gamesprites_bigbeeleft0_data
	.export		_gamesprites_bigbeeleft1_data
	.export		_gamesprites_bigbeeleft2_data
	.export		_gamesprites_bigbeeright0_data
	.export		_gamesprites_bigbeeright1_data
	.export		_gamesprites_bigbeeright2_data
	.export		_gamesprites_smallduck1left0_data
	.export		_gamesprites_smallduck2left0_data
	.export		_gamesprites_smallduckleft1_data
	.export		_gamesprites_smallduckleft2_data
	.export		_gamesprites_smallduckleft0__1_data
	.export		_gamesprites_smallduckleft1__1_data
	.export		_gamesprites_smallduckleft2__1_data
	.export		_gamesprites_big3_data
	.export		_gamesprites_Big2_data
	.export		_gamesprites_big1_data
	.export		_gamesprites_blank_data
	.export		_gamesprites_blitz0_data
	.export		_gamesprites_blitz1_data
	.export		_gamesprites_blitz2_data
	.export		_gamesprites_blitz3_data
	.export		_gamesprites_blitz4_data
	.export		_gamesprites_blitz5_data
	.export		_gamesprites_blitz6_data
	.export		_gamesprites_blitz7_data
	.export		_gamesprites_blitz8_data
	.export		_gamesprites_blitz9_data
	.export		_gamesprites_blitz10_data
	.export		_gamesprites_blitz11_data
	.export		_gamesprites_blitz12_data
	.export		_gamesprites_blitz13_data
	.export		_gamesprites_blitz14_data
	.export		_gamesprites_blitz15_data
	.export		_gamesprites_blitz16_data
	.export		_gamesprites_blitz17_data
	.export		_gamesprites_blitz18_data
	.export		_gamesprites_blitz19_data
	.export		_gamesprites_blitz20_data
	.export		_gamesprites_blitz21_data
	.export		_gamesprites_blitz23_data
	.export		_gamesprites_blitz24_data
	.export		_gamesprites_blitz25_data
	.export		_doublepad
	.export		_generic_pad
	.export		_prev_pad1
	.export		_prev_pad2
	.export		_prev_pad3
	.export		_prev_pad4
	.export		_pad1
	.export		_pad2
	.export		_pad3
	.export		_pad4
	.export		_game_mode
	.export		_winner
	.export		_game_frame_timer
	.export		_game_timer
	.export		_speed_option
	.export		_force_redraw
	.export		_collision
	.export		_collision_L
	.export		_collision_R
	.export		_collision_U
	.export		_collision_D
	.export		_coordinates
	.export		_temp1
	.export		_temp2
	.export		_temp3
	.export		_temp4
	.export		_temp5
	.export		_temp6
	.export		_tempint
	.export		_eject_L
	.export		_eject_R
	.export		_eject_D
	.export		_eject_U
	.export		_address
	.export		_x
	.export		_y
	.export		_index
	.export		_map
	.export		_scroll_x
	.export		_scroll_y
	.export		_hero_velocity_x
	.export		_hero_velocity_y
	.export		_old_x
	.export		_old_y
	.export		_temp
	.export		_temp_x
	.export		_temp_y
	.export		_temp_x2
	.export		_temp_y2
	.export		_largeindex
	.export		_song
	.export		_bit_index
	.export		_bit_offset
	.export		_frame_counter
	.export		_ai_counter
	.export		_current_player
	.export		_team1_score
	.export		_team2_score
	.export		_win_reason
	.export		_consumed_dots
	.export		_start_hold_timer
	.export		_start_held
	.export		_tinyhoney
	.export		_Generic
	.export		_GenericBoxGuy
	.export		_BoxGuy1
	.export		_BoxGuy2
	.export		_BoxGuy3
	.export		_BoxGuy4
	.export		_palette_bg
	.export		_palette_sp
	.export		_metatiles1
	.export		_load_room
	.export		_draw_sprites
	.export		_draw_title_sprites
	.export		_movement
	.export		_check_tile_and_collect
	.export		_debug_extras
	.export		_read_controllers
	.export		_seeker_ai
	.export		_chaser_ai
	.export		_game_loop
	.export		_title_loop
	.export		_options_loop
	.export		_gameover_loop
	.export		_init_game_loop
	.export		_init_options_loop
	.export		_init_gameover_loop
	.export		_init_title_loop
	.export		_init_system
	.export		_clear_background
	.export		_bg_collision_sub
	.export		_bg_coll_L
	.export		_bg_coll_R
	.export		_bg_coll_U
	.export		_bg_coll_D
	.export		_sprite_collision
	.export		_main
	.export		_pellet_tiles
	.export		_blank_tiles
	.export		_is_dot_consumed
	.export		_mark_dot_consumed

.segment	"DATA"

_BoxGuy1:
	.word	$4000
	.word	$2800
_BoxGuy2:
	.word	$8000
	.word	$3000
_BoxGuy3:
	.word	$A000
	.word	$3000
_BoxGuy4:
	.word	$C000
	.word	$4000

.segment	"RODATA"

_gamesprites_smallbee1left0_data:
	.byte	$00
	.byte	$00
	.byte	$27
	.byte	$00
	.byte	$08
	.byte	$00
	.byte	$28
	.byte	$00
	.byte	$80
_gamesprites_smallbee2left0_data:
	.byte	$00
	.byte	$00
	.byte	$27
	.byte	$01
	.byte	$08
	.byte	$00
	.byte	$28
	.byte	$01
	.byte	$80
_gamesprites_smallbeeleft1_data:
	.byte	$00
	.byte	$00
	.byte	$29
	.byte	$00
	.byte	$08
	.byte	$00
	.byte	$2A
	.byte	$00
	.byte	$80
_gamesprites_smallbeeleft2_data:
	.byte	$00
	.byte	$00
	.byte	$2B
	.byte	$00
	.byte	$08
	.byte	$00
	.byte	$2C
	.byte	$00
	.byte	$80
_gamesprites_smallbeeright0_data:
	.byte	$00
	.byte	$00
	.byte	$27
	.byte	$40
	.byte	$F8
	.byte	$00
	.byte	$28
	.byte	$40
	.byte	$80
_gamesprites_smallbeeright1_data:
	.byte	$00
	.byte	$00
	.byte	$29
	.byte	$40
	.byte	$F8
	.byte	$00
	.byte	$2A
	.byte	$40
	.byte	$80
_gamesprites_smallbeeright2_data:
	.byte	$00
	.byte	$00
	.byte	$2B
	.byte	$40
	.byte	$F8
	.byte	$00
	.byte	$2C
	.byte	$40
	.byte	$80
_gamesprites_bigbeeleft0_data:
	.byte	$00
	.byte	$00
	.byte	$47
	.byte	$00
	.byte	$00
	.byte	$F8
	.byte	$37
	.byte	$00
	.byte	$08
	.byte	$00
	.byte	$48
	.byte	$00
	.byte	$08
	.byte	$F8
	.byte	$38
	.byte	$00
	.byte	$80
_gamesprites_bigbeeleft1_data:
	.byte	$00
	.byte	$00
	.byte	$49
	.byte	$00
	.byte	$00
	.byte	$F8
	.byte	$39
	.byte	$00
	.byte	$08
	.byte	$F8
	.byte	$3A
	.byte	$00
	.byte	$08
	.byte	$00
	.byte	$4A
	.byte	$00
	.byte	$80
_gamesprites_bigbeeleft2_data:
	.byte	$00
	.byte	$00
	.byte	$4B
	.byte	$00
	.byte	$00
	.byte	$F8
	.byte	$3B
	.byte	$00
	.byte	$08
	.byte	$F8
	.byte	$3C
	.byte	$00
	.byte	$08
	.byte	$00
	.byte	$4C
	.byte	$00
	.byte	$80
_gamesprites_bigbeeright0_data:
	.byte	$08
	.byte	$00
	.byte	$47
	.byte	$40
	.byte	$08
	.byte	$F8
	.byte	$37
	.byte	$40
	.byte	$00
	.byte	$00
	.byte	$48
	.byte	$40
	.byte	$00
	.byte	$F8
	.byte	$38
	.byte	$40
	.byte	$80
_gamesprites_bigbeeright1_data:
	.byte	$08
	.byte	$00
	.byte	$49
	.byte	$40
	.byte	$08
	.byte	$F8
	.byte	$39
	.byte	$40
	.byte	$00
	.byte	$F8
	.byte	$3A
	.byte	$40
	.byte	$00
	.byte	$00
	.byte	$4A
	.byte	$40
	.byte	$80
_gamesprites_bigbeeright2_data:
	.byte	$08
	.byte	$00
	.byte	$4B
	.byte	$40
	.byte	$08
	.byte	$F8
	.byte	$3B
	.byte	$40
	.byte	$00
	.byte	$F8
	.byte	$3C
	.byte	$40
	.byte	$00
	.byte	$00
	.byte	$4C
	.byte	$40
	.byte	$80
_gamesprites_smallduck1left0_data:
	.byte	$00
	.byte	$00
	.byte	$0C
	.byte	$00
	.byte	$00
	.byte	$08
	.byte	$1C
	.byte	$00
	.byte	$80
_gamesprites_smallduck2left0_data:
	.byte	$00
	.byte	$00
	.byte	$0C
	.byte	$01
	.byte	$00
	.byte	$08
	.byte	$1C
	.byte	$01
	.byte	$80
_gamesprites_smallduckleft1_data:
	.byte	$00
	.byte	$00
	.byte	$0D
	.byte	$00
	.byte	$00
	.byte	$08
	.byte	$1D
	.byte	$00
	.byte	$80
_gamesprites_smallduckleft2_data:
	.byte	$00
	.byte	$00
	.byte	$0B
	.byte	$00
	.byte	$00
	.byte	$08
	.byte	$1C
	.byte	$40
	.byte	$80
_gamesprites_smallduckleft0__1_data:
	.byte	$00
	.byte	$00
	.byte	$0C
	.byte	$00
	.byte	$00
	.byte	$08
	.byte	$1C
	.byte	$00
	.byte	$80
_gamesprites_smallduckleft1__1_data:
	.byte	$00
	.byte	$00
	.byte	$0D
	.byte	$00
	.byte	$00
	.byte	$08
	.byte	$1D
	.byte	$00
	.byte	$80
_gamesprites_smallduckleft2__1_data:
	.byte	$00
	.byte	$00
	.byte	$0B
	.byte	$00
	.byte	$00
	.byte	$08
	.byte	$1C
	.byte	$40
	.byte	$80
_gamesprites_big3_data:
	.byte	$00
	.byte	$00
	.byte	$05
	.byte	$03
	.byte	$08
	.byte	$00
	.byte	$06
	.byte	$03
	.byte	$10
	.byte	$00
	.byte	$07
	.byte	$03
	.byte	$00
	.byte	$10
	.byte	$05
	.byte	$03
	.byte	$08
	.byte	$10
	.byte	$06
	.byte	$03
	.byte	$10
	.byte	$10
	.byte	$15
	.byte	$03
	.byte	$10
	.byte	$08
	.byte	$08
	.byte	$03
	.byte	$00
	.byte	$20
	.byte	$05
	.byte	$03
	.byte	$08
	.byte	$20
	.byte	$06
	.byte	$03
	.byte	$10
	.byte	$20
	.byte	$07
	.byte	$83
	.byte	$10
	.byte	$18
	.byte	$08
	.byte	$03
	.byte	$F8
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$80
_gamesprites_Big2_data:
	.byte	$00
	.byte	$00
	.byte	$05
	.byte	$03
	.byte	$08
	.byte	$00
	.byte	$06
	.byte	$03
	.byte	$10
	.byte	$00
	.byte	$07
	.byte	$03
	.byte	$10
	.byte	$08
	.byte	$08
	.byte	$03
	.byte	$10
	.byte	$10
	.byte	$07
	.byte	$83
	.byte	$08
	.byte	$10
	.byte	$06
	.byte	$03
	.byte	$00
	.byte	$10
	.byte	$07
	.byte	$43
	.byte	$00
	.byte	$18
	.byte	$08
	.byte	$03
	.byte	$00
	.byte	$20
	.byte	$07
	.byte	$C3
	.byte	$08
	.byte	$20
	.byte	$06
	.byte	$03
	.byte	$10
	.byte	$20
	.byte	$05
	.byte	$43
	.byte	$F8
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$80
_gamesprites_big1_data:
	.byte	$08
	.byte	$08
	.byte	$15
	.byte	$03
	.byte	$08
	.byte	$10
	.byte	$08
	.byte	$03
	.byte	$08
	.byte	$18
	.byte	$08
	.byte	$03
	.byte	$00
	.byte	$20
	.byte	$05
	.byte	$03
	.byte	$10
	.byte	$20
	.byte	$05
	.byte	$43
	.byte	$00
	.byte	$08
	.byte	$05
	.byte	$03
	.byte	$08
	.byte	$20
	.byte	$17
	.byte	$03
	.byte	$08
	.byte	$00
	.byte	$16
	.byte	$03
	.byte	$F8
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$80
_gamesprites_blank_data:
	.byte	$08
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$20
	.byte	$03
	.byte	$43
	.byte	$00
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$00
	.byte	$03
	.byte	$43
	.byte	$F0
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$10
	.byte	$03
	.byte	$43
	.byte	$20
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$20
	.byte	$03
	.byte	$C3
	.byte	$F0
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$80
_gamesprites_blitz0_data:
	.byte	$08
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$20
	.byte	$03
	.byte	$43
	.byte	$00
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$00
	.byte	$07
	.byte	$43
	.byte	$F0
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$08
	.byte	$08
	.byte	$03
	.byte	$20
	.byte	$10
	.byte	$15
	.byte	$43
	.byte	$20
	.byte	$18
	.byte	$08
	.byte	$03
	.byte	$20
	.byte	$20
	.byte	$07
	.byte	$C3
	.byte	$F0
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$80
_gamesprites_blitz1_data:
	.byte	$08
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$00
	.byte	$07
	.byte	$43
	.byte	$F0
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$08
	.byte	$08
	.byte	$03
	.byte	$18
	.byte	$10
	.byte	$15
	.byte	$43
	.byte	$18
	.byte	$18
	.byte	$08
	.byte	$03
	.byte	$18
	.byte	$20
	.byte	$07
	.byte	$C3
	.byte	$F0
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$00
	.byte	$05
	.byte	$43
	.byte	$20
	.byte	$10
	.byte	$05
	.byte	$43
	.byte	$20
	.byte	$20
	.byte	$05
	.byte	$43
	.byte	$20
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$80
_gamesprites_blitz2_data:
	.byte	$08
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$18
	.byte	$18
	.byte	$03
	.byte	$20
	.byte	$08
	.byte	$18
	.byte	$03
	.byte	$18
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$00
	.byte	$07
	.byte	$43
	.byte	$F0
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$08
	.byte	$08
	.byte	$03
	.byte	$10
	.byte	$10
	.byte	$15
	.byte	$43
	.byte	$10
	.byte	$18
	.byte	$08
	.byte	$03
	.byte	$10
	.byte	$20
	.byte	$07
	.byte	$C3
	.byte	$F0
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$00
	.byte	$05
	.byte	$43
	.byte	$18
	.byte	$10
	.byte	$05
	.byte	$43
	.byte	$18
	.byte	$20
	.byte	$05
	.byte	$43
	.byte	$18
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$80
_gamesprites_blitz3_data:
	.byte	$20
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$18
	.byte	$18
	.byte	$03
	.byte	$18
	.byte	$08
	.byte	$18
	.byte	$03
	.byte	$10
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$00
	.byte	$07
	.byte	$43
	.byte	$F0
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$08
	.byte	$08
	.byte	$03
	.byte	$08
	.byte	$10
	.byte	$15
	.byte	$43
	.byte	$08
	.byte	$18
	.byte	$08
	.byte	$03
	.byte	$08
	.byte	$20
	.byte	$07
	.byte	$C3
	.byte	$F0
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$00
	.byte	$05
	.byte	$43
	.byte	$10
	.byte	$10
	.byte	$05
	.byte	$43
	.byte	$10
	.byte	$20
	.byte	$05
	.byte	$43
	.byte	$10
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$80
_gamesprites_blitz4_data:
	.byte	$18
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$18
	.byte	$18
	.byte	$03
	.byte	$10
	.byte	$08
	.byte	$18
	.byte	$03
	.byte	$08
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$07
	.byte	$43
	.byte	$F0
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$08
	.byte	$08
	.byte	$03
	.byte	$00
	.byte	$10
	.byte	$15
	.byte	$43
	.byte	$00
	.byte	$18
	.byte	$08
	.byte	$03
	.byte	$00
	.byte	$20
	.byte	$07
	.byte	$C3
	.byte	$F0
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$00
	.byte	$05
	.byte	$43
	.byte	$08
	.byte	$10
	.byte	$05
	.byte	$43
	.byte	$08
	.byte	$20
	.byte	$05
	.byte	$43
	.byte	$08
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$08
	.byte	$08
	.byte	$03
	.byte	$20
	.byte	$10
	.byte	$08
	.byte	$03
	.byte	$20
	.byte	$20
	.byte	$07
	.byte	$C3
	.byte	$20
	.byte	$18
	.byte	$08
	.byte	$03
	.byte	$20
	.byte	$00
	.byte	$16
	.byte	$03
	.byte	$80
_gamesprites_blitz5_data:
	.byte	$10
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$18
	.byte	$18
	.byte	$03
	.byte	$08
	.byte	$08
	.byte	$18
	.byte	$03
	.byte	$00
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$00
	.byte	$07
	.byte	$43
	.byte	$F0
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$08
	.byte	$08
	.byte	$03
	.byte	$F8
	.byte	$10
	.byte	$15
	.byte	$43
	.byte	$F8
	.byte	$18
	.byte	$08
	.byte	$03
	.byte	$F8
	.byte	$20
	.byte	$07
	.byte	$C3
	.byte	$F0
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$05
	.byte	$43
	.byte	$00
	.byte	$10
	.byte	$05
	.byte	$43
	.byte	$00
	.byte	$20
	.byte	$05
	.byte	$43
	.byte	$00
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$08
	.byte	$08
	.byte	$03
	.byte	$18
	.byte	$10
	.byte	$08
	.byte	$03
	.byte	$18
	.byte	$20
	.byte	$07
	.byte	$C3
	.byte	$18
	.byte	$18
	.byte	$08
	.byte	$03
	.byte	$18
	.byte	$00
	.byte	$16
	.byte	$03
	.byte	$20
	.byte	$20
	.byte	$06
	.byte	$03
	.byte	$80
_gamesprites_blitz6_data:
	.byte	$08
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$18
	.byte	$18
	.byte	$03
	.byte	$00
	.byte	$08
	.byte	$18
	.byte	$03
	.byte	$F8
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$00
	.byte	$07
	.byte	$43
	.byte	$20
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$08
	.byte	$08
	.byte	$03
	.byte	$F0
	.byte	$10
	.byte	$15
	.byte	$43
	.byte	$F0
	.byte	$18
	.byte	$08
	.byte	$03
	.byte	$F0
	.byte	$20
	.byte	$07
	.byte	$C3
	.byte	$20
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$00
	.byte	$05
	.byte	$43
	.byte	$F8
	.byte	$10
	.byte	$05
	.byte	$43
	.byte	$F8
	.byte	$20
	.byte	$05
	.byte	$43
	.byte	$F8
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$08
	.byte	$08
	.byte	$03
	.byte	$10
	.byte	$10
	.byte	$08
	.byte	$03
	.byte	$10
	.byte	$20
	.byte	$07
	.byte	$C3
	.byte	$10
	.byte	$18
	.byte	$08
	.byte	$03
	.byte	$10
	.byte	$00
	.byte	$16
	.byte	$03
	.byte	$18
	.byte	$20
	.byte	$06
	.byte	$03
	.byte	$20
	.byte	$20
	.byte	$05
	.byte	$43
	.byte	$80
_gamesprites_blitz7_data:
	.byte	$00
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$18
	.byte	$18
	.byte	$03
	.byte	$F8
	.byte	$08
	.byte	$18
	.byte	$03
	.byte	$F0
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$08
	.byte	$03
	.byte	$43
	.byte	$18
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$18
	.byte	$03
	.byte	$43
	.byte	$20
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$00
	.byte	$05
	.byte	$43
	.byte	$F0
	.byte	$10
	.byte	$05
	.byte	$43
	.byte	$F0
	.byte	$20
	.byte	$05
	.byte	$43
	.byte	$F0
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$08
	.byte	$08
	.byte	$03
	.byte	$08
	.byte	$10
	.byte	$08
	.byte	$03
	.byte	$08
	.byte	$20
	.byte	$07
	.byte	$C3
	.byte	$08
	.byte	$18
	.byte	$08
	.byte	$03
	.byte	$08
	.byte	$00
	.byte	$16
	.byte	$03
	.byte	$10
	.byte	$20
	.byte	$06
	.byte	$03
	.byte	$18
	.byte	$20
	.byte	$05
	.byte	$43
	.byte	$20
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$80
_gamesprites_blitz8_data:
	.byte	$F8
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$18
	.byte	$18
	.byte	$03
	.byte	$F0
	.byte	$08
	.byte	$18
	.byte	$03
	.byte	$20
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$08
	.byte	$03
	.byte	$43
	.byte	$10
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$18
	.byte	$03
	.byte	$43
	.byte	$18
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$00
	.byte	$05
	.byte	$03
	.byte	$20
	.byte	$10
	.byte	$03
	.byte	$43
	.byte	$20
	.byte	$20
	.byte	$05
	.byte	$03
	.byte	$20
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$08
	.byte	$08
	.byte	$03
	.byte	$00
	.byte	$10
	.byte	$08
	.byte	$03
	.byte	$00
	.byte	$20
	.byte	$07
	.byte	$C3
	.byte	$00
	.byte	$18
	.byte	$08
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$16
	.byte	$03
	.byte	$08
	.byte	$20
	.byte	$06
	.byte	$03
	.byte	$10
	.byte	$20
	.byte	$05
	.byte	$43
	.byte	$18
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$80
_gamesprites_blitz9_data:
	.byte	$F0
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$10
	.byte	$08
	.byte	$03
	.byte	$20
	.byte	$18
	.byte	$08
	.byte	$03
	.byte	$18
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$08
	.byte	$08
	.byte	$03
	.byte	$00
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$08
	.byte	$03
	.byte	$43
	.byte	$08
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$18
	.byte	$03
	.byte	$43
	.byte	$10
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$00
	.byte	$05
	.byte	$03
	.byte	$18
	.byte	$10
	.byte	$03
	.byte	$43
	.byte	$18
	.byte	$20
	.byte	$05
	.byte	$03
	.byte	$18
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$00
	.byte	$17
	.byte	$83
	.byte	$F8
	.byte	$08
	.byte	$08
	.byte	$03
	.byte	$F8
	.byte	$10
	.byte	$08
	.byte	$03
	.byte	$F8
	.byte	$20
	.byte	$07
	.byte	$C3
	.byte	$F8
	.byte	$18
	.byte	$08
	.byte	$03
	.byte	$F8
	.byte	$00
	.byte	$16
	.byte	$03
	.byte	$00
	.byte	$20
	.byte	$06
	.byte	$03
	.byte	$08
	.byte	$20
	.byte	$05
	.byte	$43
	.byte	$10
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$20
	.byte	$17
	.byte	$03
	.byte	$80
_gamesprites_blitz10_data:
	.byte	$20
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$10
	.byte	$08
	.byte	$03
	.byte	$18
	.byte	$18
	.byte	$08
	.byte	$03
	.byte	$10
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$08
	.byte	$08
	.byte	$03
	.byte	$F8
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$08
	.byte	$03
	.byte	$43
	.byte	$00
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$18
	.byte	$03
	.byte	$43
	.byte	$08
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$00
	.byte	$05
	.byte	$03
	.byte	$10
	.byte	$10
	.byte	$03
	.byte	$43
	.byte	$10
	.byte	$20
	.byte	$05
	.byte	$03
	.byte	$10
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$00
	.byte	$17
	.byte	$83
	.byte	$F0
	.byte	$08
	.byte	$08
	.byte	$03
	.byte	$F0
	.byte	$10
	.byte	$08
	.byte	$03
	.byte	$F0
	.byte	$20
	.byte	$07
	.byte	$C3
	.byte	$F0
	.byte	$18
	.byte	$08
	.byte	$03
	.byte	$F0
	.byte	$00
	.byte	$16
	.byte	$03
	.byte	$F8
	.byte	$20
	.byte	$06
	.byte	$03
	.byte	$00
	.byte	$20
	.byte	$05
	.byte	$43
	.byte	$08
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$20
	.byte	$17
	.byte	$03
	.byte	$20
	.byte	$00
	.byte	$05
	.byte	$43
	.byte	$20
	.byte	$20
	.byte	$05
	.byte	$43
	.byte	$80
_gamesprites_blitz11_data:
	.byte	$18
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$10
	.byte	$08
	.byte	$03
	.byte	$10
	.byte	$18
	.byte	$08
	.byte	$03
	.byte	$08
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$08
	.byte	$08
	.byte	$03
	.byte	$F0
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$08
	.byte	$03
	.byte	$43
	.byte	$F8
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$20
	.byte	$03
	.byte	$43
	.byte	$00
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$00
	.byte	$05
	.byte	$03
	.byte	$08
	.byte	$10
	.byte	$03
	.byte	$43
	.byte	$08
	.byte	$20
	.byte	$05
	.byte	$03
	.byte	$08
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$00
	.byte	$17
	.byte	$83
	.byte	$20
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$20
	.byte	$03
	.byte	$C3
	.byte	$20
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$20
	.byte	$06
	.byte	$03
	.byte	$F8
	.byte	$20
	.byte	$05
	.byte	$43
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$20
	.byte	$17
	.byte	$03
	.byte	$18
	.byte	$00
	.byte	$05
	.byte	$43
	.byte	$18
	.byte	$20
	.byte	$05
	.byte	$43
	.byte	$80
_gamesprites_blitz12_data:
	.byte	$10
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$10
	.byte	$08
	.byte	$03
	.byte	$08
	.byte	$18
	.byte	$08
	.byte	$03
	.byte	$00
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$08
	.byte	$08
	.byte	$03
	.byte	$20
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$08
	.byte	$03
	.byte	$43
	.byte	$F0
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$20
	.byte	$03
	.byte	$43
	.byte	$F8
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$05
	.byte	$03
	.byte	$00
	.byte	$10
	.byte	$03
	.byte	$43
	.byte	$00
	.byte	$20
	.byte	$05
	.byte	$03
	.byte	$00
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$00
	.byte	$17
	.byte	$83
	.byte	$18
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$20
	.byte	$03
	.byte	$C3
	.byte	$18
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$00
	.byte	$05
	.byte	$03
	.byte	$F0
	.byte	$20
	.byte	$05
	.byte	$43
	.byte	$F8
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$20
	.byte	$17
	.byte	$03
	.byte	$10
	.byte	$00
	.byte	$05
	.byte	$43
	.byte	$10
	.byte	$20
	.byte	$05
	.byte	$43
	.byte	$80
_gamesprites_blitz13_data:
	.byte	$08
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$10
	.byte	$08
	.byte	$03
	.byte	$00
	.byte	$18
	.byte	$08
	.byte	$03
	.byte	$F8
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$08
	.byte	$08
	.byte	$03
	.byte	$18
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$08
	.byte	$03
	.byte	$43
	.byte	$20
	.byte	$18
	.byte	$08
	.byte	$03
	.byte	$20
	.byte	$10
	.byte	$08
	.byte	$03
	.byte	$F0
	.byte	$20
	.byte	$03
	.byte	$43
	.byte	$F0
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$08
	.byte	$08
	.byte	$03
	.byte	$20
	.byte	$00
	.byte	$17
	.byte	$83
	.byte	$F0
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$00
	.byte	$05
	.byte	$03
	.byte	$F8
	.byte	$10
	.byte	$03
	.byte	$43
	.byte	$F8
	.byte	$20
	.byte	$05
	.byte	$03
	.byte	$F8
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$17
	.byte	$83
	.byte	$10
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$20
	.byte	$03
	.byte	$C3
	.byte	$10
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$00
	.byte	$05
	.byte	$03
	.byte	$20
	.byte	$20
	.byte	$16
	.byte	$C3
	.byte	$F0
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$20
	.byte	$17
	.byte	$03
	.byte	$08
	.byte	$00
	.byte	$05
	.byte	$43
	.byte	$08
	.byte	$20
	.byte	$05
	.byte	$43
	.byte	$80
_gamesprites_blitz14_data:
	.byte	$00
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$10
	.byte	$08
	.byte	$03
	.byte	$F8
	.byte	$18
	.byte	$08
	.byte	$03
	.byte	$F0
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$08
	.byte	$08
	.byte	$03
	.byte	$10
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$08
	.byte	$03
	.byte	$43
	.byte	$18
	.byte	$18
	.byte	$08
	.byte	$03
	.byte	$18
	.byte	$10
	.byte	$08
	.byte	$03
	.byte	$20
	.byte	$20
	.byte	$03
	.byte	$43
	.byte	$20
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$08
	.byte	$08
	.byte	$03
	.byte	$18
	.byte	$00
	.byte	$17
	.byte	$83
	.byte	$F0
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$00
	.byte	$05
	.byte	$03
	.byte	$F0
	.byte	$10
	.byte	$03
	.byte	$43
	.byte	$F0
	.byte	$20
	.byte	$05
	.byte	$03
	.byte	$F0
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$00
	.byte	$17
	.byte	$83
	.byte	$08
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$20
	.byte	$03
	.byte	$C3
	.byte	$08
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$00
	.byte	$05
	.byte	$03
	.byte	$18
	.byte	$20
	.byte	$16
	.byte	$C3
	.byte	$20
	.byte	$00
	.byte	$05
	.byte	$43
	.byte	$F8
	.byte	$20
	.byte	$17
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$05
	.byte	$43
	.byte	$00
	.byte	$20
	.byte	$05
	.byte	$43
	.byte	$80
_gamesprites_blitz15_data:
	.byte	$F8
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$10
	.byte	$08
	.byte	$03
	.byte	$F0
	.byte	$18
	.byte	$08
	.byte	$03
	.byte	$20
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$08
	.byte	$08
	.byte	$03
	.byte	$08
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$08
	.byte	$03
	.byte	$43
	.byte	$10
	.byte	$18
	.byte	$08
	.byte	$03
	.byte	$10
	.byte	$10
	.byte	$08
	.byte	$03
	.byte	$18
	.byte	$20
	.byte	$03
	.byte	$43
	.byte	$18
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$08
	.byte	$08
	.byte	$03
	.byte	$10
	.byte	$00
	.byte	$17
	.byte	$83
	.byte	$F0
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$10
	.byte	$03
	.byte	$43
	.byte	$20
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$00
	.byte	$17
	.byte	$83
	.byte	$00
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$20
	.byte	$03
	.byte	$C3
	.byte	$00
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$00
	.byte	$05
	.byte	$03
	.byte	$10
	.byte	$20
	.byte	$16
	.byte	$C3
	.byte	$18
	.byte	$00
	.byte	$05
	.byte	$43
	.byte	$F0
	.byte	$20
	.byte	$17
	.byte	$03
	.byte	$F8
	.byte	$00
	.byte	$05
	.byte	$43
	.byte	$F8
	.byte	$20
	.byte	$05
	.byte	$43
	.byte	$80
_gamesprites_blitz16_data:
	.byte	$F0
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$18
	.byte	$16
	.byte	$03
	.byte	$18
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$08
	.byte	$03
	.byte	$43
	.byte	$08
	.byte	$18
	.byte	$08
	.byte	$03
	.byte	$08
	.byte	$10
	.byte	$08
	.byte	$03
	.byte	$10
	.byte	$20
	.byte	$03
	.byte	$43
	.byte	$10
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$08
	.byte	$08
	.byte	$03
	.byte	$08
	.byte	$00
	.byte	$17
	.byte	$83
	.byte	$F0
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$10
	.byte	$03
	.byte	$43
	.byte	$18
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$00
	.byte	$05
	.byte	$83
	.byte	$F8
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$20
	.byte	$03
	.byte	$C3
	.byte	$F8
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$05
	.byte	$03
	.byte	$08
	.byte	$20
	.byte	$16
	.byte	$C3
	.byte	$10
	.byte	$00
	.byte	$05
	.byte	$43
	.byte	$20
	.byte	$20
	.byte	$07
	.byte	$C3
	.byte	$F0
	.byte	$00
	.byte	$05
	.byte	$43
	.byte	$F0
	.byte	$20
	.byte	$05
	.byte	$43
	.byte	$80
_gamesprites_blitz17_data:
	.byte	$20
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$10
	.byte	$18
	.byte	$03
	.byte	$20
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$18
	.byte	$16
	.byte	$03
	.byte	$10
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$08
	.byte	$03
	.byte	$43
	.byte	$00
	.byte	$18
	.byte	$08
	.byte	$03
	.byte	$00
	.byte	$10
	.byte	$08
	.byte	$03
	.byte	$08
	.byte	$20
	.byte	$03
	.byte	$43
	.byte	$08
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$08
	.byte	$08
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$17
	.byte	$83
	.byte	$F0
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$10
	.byte	$03
	.byte	$43
	.byte	$10
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$00
	.byte	$05
	.byte	$83
	.byte	$F0
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$20
	.byte	$03
	.byte	$C3
	.byte	$F0
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$00
	.byte	$05
	.byte	$03
	.byte	$00
	.byte	$20
	.byte	$16
	.byte	$C3
	.byte	$08
	.byte	$00
	.byte	$05
	.byte	$43
	.byte	$18
	.byte	$20
	.byte	$07
	.byte	$C3
	.byte	$20
	.byte	$00
	.byte	$06
	.byte	$43
	.byte	$20
	.byte	$20
	.byte	$06
	.byte	$43
	.byte	$80
_gamesprites_blitz18_data:
	.byte	$18
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$10
	.byte	$18
	.byte	$03
	.byte	$18
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$18
	.byte	$16
	.byte	$03
	.byte	$08
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$08
	.byte	$03
	.byte	$43
	.byte	$F8
	.byte	$18
	.byte	$08
	.byte	$03
	.byte	$F8
	.byte	$10
	.byte	$08
	.byte	$03
	.byte	$00
	.byte	$20
	.byte	$03
	.byte	$43
	.byte	$00
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$08
	.byte	$08
	.byte	$03
	.byte	$F8
	.byte	$00
	.byte	$17
	.byte	$83
	.byte	$F0
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$10
	.byte	$03
	.byte	$43
	.byte	$08
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$00
	.byte	$05
	.byte	$83
	.byte	$20
	.byte	$08
	.byte	$16
	.byte	$83
	.byte	$20
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$20
	.byte	$05
	.byte	$C3
	.byte	$20
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$00
	.byte	$07
	.byte	$03
	.byte	$F0
	.byte	$00
	.byte	$05
	.byte	$03
	.byte	$F8
	.byte	$20
	.byte	$16
	.byte	$C3
	.byte	$00
	.byte	$00
	.byte	$05
	.byte	$43
	.byte	$10
	.byte	$20
	.byte	$07
	.byte	$C3
	.byte	$18
	.byte	$00
	.byte	$06
	.byte	$43
	.byte	$18
	.byte	$20
	.byte	$06
	.byte	$43
	.byte	$80
_gamesprites_blitz19_data:
	.byte	$10
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$10
	.byte	$18
	.byte	$03
	.byte	$10
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$18
	.byte	$16
	.byte	$03
	.byte	$00
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$08
	.byte	$03
	.byte	$43
	.byte	$F0
	.byte	$18
	.byte	$08
	.byte	$03
	.byte	$F0
	.byte	$10
	.byte	$08
	.byte	$03
	.byte	$F8
	.byte	$20
	.byte	$03
	.byte	$43
	.byte	$F8
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$08
	.byte	$08
	.byte	$03
	.byte	$F0
	.byte	$00
	.byte	$17
	.byte	$83
	.byte	$F0
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$10
	.byte	$03
	.byte	$43
	.byte	$00
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$00
	.byte	$05
	.byte	$83
	.byte	$18
	.byte	$08
	.byte	$16
	.byte	$83
	.byte	$18
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$20
	.byte	$05
	.byte	$C3
	.byte	$18
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$00
	.byte	$07
	.byte	$03
	.byte	$20
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$20
	.byte	$16
	.byte	$C3
	.byte	$F8
	.byte	$00
	.byte	$05
	.byte	$43
	.byte	$08
	.byte	$20
	.byte	$07
	.byte	$C3
	.byte	$10
	.byte	$00
	.byte	$06
	.byte	$43
	.byte	$10
	.byte	$20
	.byte	$06
	.byte	$43
	.byte	$80
_gamesprites_blitz20_data:
	.byte	$08
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$10
	.byte	$18
	.byte	$03
	.byte	$08
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$18
	.byte	$16
	.byte	$03
	.byte	$F8
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$08
	.byte	$03
	.byte	$43
	.byte	$20
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$20
	.byte	$03
	.byte	$43
	.byte	$F0
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$00
	.byte	$03
	.byte	$83
	.byte	$F0
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$10
	.byte	$03
	.byte	$43
	.byte	$F8
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$05
	.byte	$83
	.byte	$10
	.byte	$08
	.byte	$16
	.byte	$83
	.byte	$10
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$20
	.byte	$05
	.byte	$C3
	.byte	$10
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$00
	.byte	$07
	.byte	$03
	.byte	$18
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$20
	.byte	$03
	.byte	$C3
	.byte	$F0
	.byte	$00
	.byte	$05
	.byte	$43
	.byte	$00
	.byte	$20
	.byte	$07
	.byte	$C3
	.byte	$08
	.byte	$00
	.byte	$06
	.byte	$43
	.byte	$08
	.byte	$20
	.byte	$06
	.byte	$43
	.byte	$80
_gamesprites_blitz21_data:
	.byte	$00
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$10
	.byte	$18
	.byte	$03
	.byte	$00
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$18
	.byte	$16
	.byte	$03
	.byte	$F0
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$08
	.byte	$03
	.byte	$43
	.byte	$18
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$20
	.byte	$03
	.byte	$43
	.byte	$20
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$00
	.byte	$03
	.byte	$83
	.byte	$F0
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$10
	.byte	$03
	.byte	$43
	.byte	$F0
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$00
	.byte	$05
	.byte	$83
	.byte	$08
	.byte	$08
	.byte	$16
	.byte	$83
	.byte	$08
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$20
	.byte	$05
	.byte	$C3
	.byte	$08
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$00
	.byte	$07
	.byte	$03
	.byte	$18
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$20
	.byte	$03
	.byte	$C3
	.byte	$20
	.byte	$00
	.byte	$03
	.byte	$43
	.byte	$F8
	.byte	$20
	.byte	$07
	.byte	$C3
	.byte	$00
	.byte	$00
	.byte	$06
	.byte	$43
	.byte	$00
	.byte	$20
	.byte	$06
	.byte	$43
	.byte	$80
_gamesprites_blitz23_data:
	.byte	$F8
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$10
	.byte	$18
	.byte	$03
	.byte	$F8
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$18
	.byte	$16
	.byte	$03
	.byte	$20
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$08
	.byte	$03
	.byte	$43
	.byte	$10
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$20
	.byte	$03
	.byte	$43
	.byte	$18
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$00
	.byte	$03
	.byte	$83
	.byte	$F0
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$10
	.byte	$03
	.byte	$43
	.byte	$20
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$00
	.byte	$05
	.byte	$83
	.byte	$00
	.byte	$08
	.byte	$16
	.byte	$83
	.byte	$00
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$20
	.byte	$05
	.byte	$C3
	.byte	$00
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$07
	.byte	$03
	.byte	$10
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$20
	.byte	$03
	.byte	$C3
	.byte	$18
	.byte	$00
	.byte	$03
	.byte	$43
	.byte	$F0
	.byte	$20
	.byte	$07
	.byte	$C3
	.byte	$F8
	.byte	$00
	.byte	$06
	.byte	$43
	.byte	$F8
	.byte	$20
	.byte	$06
	.byte	$43
	.byte	$80
_gamesprites_blitz24_data:
	.byte	$F0
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$10
	.byte	$18
	.byte	$03
	.byte	$F0
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$08
	.byte	$03
	.byte	$43
	.byte	$08
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$20
	.byte	$03
	.byte	$43
	.byte	$10
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$83
	.byte	$F0
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$10
	.byte	$03
	.byte	$43
	.byte	$18
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$00
	.byte	$03
	.byte	$83
	.byte	$F8
	.byte	$08
	.byte	$16
	.byte	$83
	.byte	$F8
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$20
	.byte	$05
	.byte	$C3
	.byte	$F8
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$00
	.byte	$07
	.byte	$03
	.byte	$08
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$20
	.byte	$03
	.byte	$C3
	.byte	$10
	.byte	$00
	.byte	$03
	.byte	$43
	.byte	$20
	.byte	$20
	.byte	$03
	.byte	$C3
	.byte	$F0
	.byte	$00
	.byte	$06
	.byte	$43
	.byte	$F0
	.byte	$20
	.byte	$06
	.byte	$43
	.byte	$80
_gamesprites_blitz25_data:
	.byte	$F8
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$08
	.byte	$03
	.byte	$43
	.byte	$08
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$20
	.byte	$03
	.byte	$43
	.byte	$10
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$83
	.byte	$F0
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$F8
	.byte	$03
	.byte	$03
	.byte	$F8
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$00
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$10
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$28
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$10
	.byte	$03
	.byte	$43
	.byte	$18
	.byte	$20
	.byte	$03
	.byte	$03
	.byte	$18
	.byte	$08
	.byte	$03
	.byte	$03
	.byte	$20
	.byte	$00
	.byte	$03
	.byte	$83
	.byte	$F0
	.byte	$08
	.byte	$16
	.byte	$83
	.byte	$F0
	.byte	$10
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$20
	.byte	$05
	.byte	$C3
	.byte	$F0
	.byte	$18
	.byte	$03
	.byte	$03
	.byte	$F0
	.byte	$00
	.byte	$07
	.byte	$03
	.byte	$08
	.byte	$00
	.byte	$03
	.byte	$03
	.byte	$08
	.byte	$20
	.byte	$03
	.byte	$C3
	.byte	$10
	.byte	$00
	.byte	$03
	.byte	$43
	.byte	$20
	.byte	$20
	.byte	$03
	.byte	$C3
	.byte	$F8
	.byte	$00
	.byte	$03
	.byte	$43
	.byte	$F8
	.byte	$20
	.byte	$03
	.byte	$43
	.byte	$80
_tinyhoney:
	.byte	$A7
	.byte	$B6
	.byte	$EE
	.byte	$EF
	.byte	$A7
	.byte	$5D
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$5C
	.byte	$EE
	.byte	$EF
	.byte	$B6
	.byte	$AB
	.byte	$B6
	.byte	$AB
	.byte	$A7
	.byte	$FE
	.byte	$FF
	.byte	$B6
	.byte	$5D
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$5C
	.byte	$FE
	.byte	$FF
	.byte	$A7
	.byte	$B6
	.byte	$A7
	.byte	$A7
	.byte	$B6
	.byte	$A7
	.byte	$B6
	.byte	$A8
	.byte	$5E
	.byte	$5F
	.byte	$5F
	.byte	$5F
	.byte	$5F
	.byte	$5F
	.byte	$5F
	.byte	$5F
	.byte	$5F
	.byte	$5F
	.byte	$5F
	.byte	$5F
	.byte	$5F
	.byte	$5F
	.byte	$5F
	.byte	$5F
	.byte	$5F
	.byte	$5F
	.byte	$5F
	.byte	$5F
	.byte	$5F
	.byte	$5B
	.byte	$AA
	.byte	$B6
	.byte	$A7
	.byte	$B6
	.byte	$B6
	.byte	$B6
	.byte	$A7
	.byte	$F8
	.byte	$F9
	.byte	$E8
	.byte	$E9
	.byte	$F8
	.byte	$F9
	.byte	$F8
	.byte	$F9
	.byte	$BE
	.byte	$BF
	.byte	$EE
	.byte	$EF
	.byte	$F8
	.byte	$F9
	.byte	$F8
	.byte	$F9
	.byte	$EE
	.byte	$EF
	.byte	$EE
	.byte	$EF
	.byte	$E8
	.byte	$E9
	.byte	$F8
	.byte	$F9
	.byte	$F8
	.byte	$F9
	.byte	$F8
	.byte	$F9
	.byte	$AA
	.byte	$B6
	.byte	$A7
	.byte	$EB
	.byte	$82
	.byte	$83
	.byte	$C8
	.byte	$CA
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C8
	.byte	$DE
	.byte	$DF
	.byte	$FE
	.byte	$FF
	.byte	$C6
	.byte	$A7
	.byte	$A7
	.byte	$C6
	.byte	$FE
	.byte	$FF
	.byte	$FE
	.byte	$FF
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$82
	.byte	$83
	.byte	$EB
	.byte	$B6
	.byte	$B6
	.byte	$FB
	.byte	$92
	.byte	$93
	.byte	$CA
	.byte	$C8
	.byte	$EE
	.byte	$EF
	.byte	$C6
	.byte	$CA
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C8
	.byte	$C8
	.byte	$C8
	.byte	$C6
	.byte	$C8
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C9
	.byte	$C6
	.byte	$C9
	.byte	$EE
	.byte	$EF
	.byte	$C6
	.byte	$C9
	.byte	$92
	.byte	$93
	.byte	$FB
	.byte	$A7
	.byte	$CD
	.byte	$CD
	.byte	$CD
	.byte	$BF
	.byte	$C6
	.byte	$C6
	.byte	$FE
	.byte	$FF
	.byte	$F8
	.byte	$F9
	.byte	$E8
	.byte	$E9
	.byte	$9F
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$9E
	.byte	$E8
	.byte	$E9
	.byte	$F8
	.byte	$F9
	.byte	$FE
	.byte	$FF
	.byte	$C6
	.byte	$C9
	.byte	$BE
	.byte	$BF
	.byte	$EB
	.byte	$B6
	.byte	$CC
	.byte	$CB
	.byte	$DD
	.byte	$DF
	.byte	$C6
	.byte	$CA
	.byte	$C6
	.byte	$C8
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C8
	.byte	$C6
	.byte	$C6
	.byte	$A7
	.byte	$C6
	.byte	$C8
	.byte	$A7
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$DE
	.byte	$DF
	.byte	$FB
	.byte	$B6
	.byte	$CC
	.byte	$DB
	.byte	$C6
	.byte	$8C
	.byte	$E8
	.byte	$E9
	.byte	$F8
	.byte	$F9
	.byte	$8D
	.byte	$C6
	.byte	$F8
	.byte	$F9
	.byte	$F8
	.byte	$F9
	.byte	$EB
	.byte	$CA
	.byte	$C6
	.byte	$EB
	.byte	$F8
	.byte	$F9
	.byte	$F8
	.byte	$F9
	.byte	$C6
	.byte	$8C
	.byte	$F8
	.byte	$F9
	.byte	$E8
	.byte	$E9
	.byte	$8D
	.byte	$C6
	.byte	$EA
	.byte	$B6
	.byte	$CB
	.byte	$DF
	.byte	$C6
	.byte	$A7
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$8E
	.byte	$EB
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$FB
	.byte	$C6
	.byte	$C6
	.byte	$FB
	.byte	$CA
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$EB
	.byte	$8F
	.byte	$C9
	.byte	$C6
	.byte	$C6
	.byte	$EB
	.byte	$C6
	.byte	$FA
	.byte	$B8
	.byte	$DF
	.byte	$EB
	.byte	$C6
	.byte	$A7
	.byte	$C6
	.byte	$9C
	.byte	$CA
	.byte	$C6
	.byte	$FB
	.byte	$C6
	.byte	$F8
	.byte	$F9
	.byte	$F8
	.byte	$F9
	.byte	$8F
	.byte	$CA
	.byte	$C8
	.byte	$8E
	.byte	$E8
	.byte	$E9
	.byte	$F8
	.byte	$F9
	.byte	$C6
	.byte	$FB
	.byte	$C6
	.byte	$C6
	.byte	$A7
	.byte	$C6
	.byte	$FB
	.byte	$C7
	.byte	$EB
	.byte	$B9
	.byte	$B6
	.byte	$FB
	.byte	$C6
	.byte	$A7
	.byte	$C6
	.byte	$BE
	.byte	$BF
	.byte	$CA
	.byte	$C6
	.byte	$C6
	.byte	$CA
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C7
	.byte	$C8
	.byte	$C9
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C9
	.byte	$C6
	.byte	$C6
	.byte	$EE
	.byte	$EF
	.byte	$C6
	.byte	$A7
	.byte	$C6
	.byte	$FB
	.byte	$B6
	.byte	$A7
	.byte	$EB
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$DE
	.byte	$DF
	.byte	$A7
	.byte	$F8
	.byte	$F9
	.byte	$F8
	.byte	$F9
	.byte	$F8
	.byte	$F9
	.byte	$8F
	.byte	$C6
	.byte	$C9
	.byte	$8E
	.byte	$F8
	.byte	$F9
	.byte	$A7
	.byte	$A7
	.byte	$F8
	.byte	$F9
	.byte	$A7
	.byte	$FE
	.byte	$FF
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$ED
	.byte	$BF
	.byte	$B6
	.byte	$FB
	.byte	$C6
	.byte	$EB
	.byte	$C6
	.byte	$CA
	.byte	$C6
	.byte	$C6
	.byte	$C8
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C8
	.byte	$CA
	.byte	$C6
	.byte	$C7
	.byte	$C8
	.byte	$C6
	.byte	$C6
	.byte	$C8
	.byte	$CA
	.byte	$C6
	.byte	$C8
	.byte	$C6
	.byte	$CA
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$EB
	.byte	$C6
	.byte	$FD
	.byte	$DF
	.byte	$B6
	.byte	$EB
	.byte	$C6
	.byte	$FB
	.byte	$F8
	.byte	$F9
	.byte	$F8
	.byte	$F9
	.byte	$A7
	.byte	$EE
	.byte	$EF
	.byte	$A7
	.byte	$F8
	.byte	$F9
	.byte	$A7
	.byte	$C8
	.byte	$C8
	.byte	$A7
	.byte	$F8
	.byte	$F9
	.byte	$A7
	.byte	$EE
	.byte	$EF
	.byte	$A7
	.byte	$F8
	.byte	$F9
	.byte	$F8
	.byte	$F9
	.byte	$FB
	.byte	$C6
	.byte	$EB
	.byte	$A7
	.byte	$B6
	.byte	$FB
	.byte	$C6
	.byte	$EE
	.byte	$EF
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$A7
	.byte	$FE
	.byte	$FF
	.byte	$A7
	.byte	$C6
	.byte	$C6
	.byte	$C7
	.byte	$C8
	.byte	$C7
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$A7
	.byte	$FE
	.byte	$FF
	.byte	$A7
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$BE
	.byte	$BF
	.byte	$C7
	.byte	$FB
	.byte	$B6
	.byte	$BE
	.byte	$EC
	.byte	$C6
	.byte	$FE
	.byte	$FF
	.byte	$F8
	.byte	$F9
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$BE
	.byte	$BF
	.byte	$C6
	.byte	$C7
	.byte	$BE
	.byte	$BF
	.byte	$CA
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$F8
	.byte	$F9
	.byte	$DE
	.byte	$DF
	.byte	$C8
	.byte	$EB
	.byte	$B6
	.byte	$DE
	.byte	$FC
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$EB
	.byte	$C6
	.byte	$A7
	.byte	$F8
	.byte	$F9
	.byte	$CE
	.byte	$CF
	.byte	$C6
	.byte	$C6
	.byte	$CE
	.byte	$CF
	.byte	$F8
	.byte	$F9
	.byte	$A7
	.byte	$C6
	.byte	$EB
	.byte	$C6
	.byte	$C6
	.byte	$CA
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$FB
	.byte	$B6
	.byte	$B6
	.byte	$EB
	.byte	$C6
	.byte	$A7
	.byte	$F8
	.byte	$F9
	.byte	$A7
	.byte	$C6
	.byte	$FB
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$8E
	.byte	$DE
	.byte	$DF
	.byte	$C6
	.byte	$C6
	.byte	$DE
	.byte	$DF
	.byte	$8F
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$FB
	.byte	$C6
	.byte	$9C
	.byte	$9C
	.byte	$F8
	.byte	$F9
	.byte	$C7
	.byte	$EA
	.byte	$B6
	.byte	$B6
	.byte	$FB
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$BE
	.byte	$BF
	.byte	$C6
	.byte	$EB
	.byte	$C6
	.byte	$8C
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$EE
	.byte	$EF
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$8D
	.byte	$C6
	.byte	$EB
	.byte	$C6
	.byte	$EE
	.byte	$EF
	.byte	$C6
	.byte	$C6
	.byte	$CA
	.byte	$FA
	.byte	$B6
	.byte	$B6
	.byte	$EA
	.byte	$C6
	.byte	$A7
	.byte	$A7
	.byte	$DE
	.byte	$DF
	.byte	$C6
	.byte	$FB
	.byte	$C6
	.byte	$8C
	.byte	$BE
	.byte	$BF
	.byte	$8D
	.byte	$C6
	.byte	$FE
	.byte	$FF
	.byte	$C6
	.byte	$8C
	.byte	$BE
	.byte	$BF
	.byte	$8D
	.byte	$C6
	.byte	$FB
	.byte	$C6
	.byte	$FE
	.byte	$FF
	.byte	$E8
	.byte	$E9
	.byte	$C6
	.byte	$EB
	.byte	$99
	.byte	$A7
	.byte	$FA
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$EB
	.byte	$C6
	.byte	$EA
	.byte	$C6
	.byte	$EB
	.byte	$CE
	.byte	$CF
	.byte	$EB
	.byte	$C7
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$EB
	.byte	$CE
	.byte	$CF
	.byte	$EB
	.byte	$C9
	.byte	$EB
	.byte	$C6
	.byte	$A7
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C8
	.byte	$FB
	.byte	$B6
	.byte	$B6
	.byte	$EB
	.byte	$C6
	.byte	$F8
	.byte	$F9
	.byte	$A7
	.byte	$FB
	.byte	$C6
	.byte	$FA
	.byte	$C6
	.byte	$FB
	.byte	$CE
	.byte	$DB
	.byte	$FB
	.byte	$C6
	.byte	$BE
	.byte	$BF
	.byte	$C7
	.byte	$FB
	.byte	$CE
	.byte	$CF
	.byte	$FB
	.byte	$C6
	.byte	$FB
	.byte	$C6
	.byte	$A7
	.byte	$F8
	.byte	$F9
	.byte	$A7
	.byte	$C6
	.byte	$EB
	.byte	$B6
	.byte	$B6
	.byte	$FB
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$EB
	.byte	$C6
	.byte	$8E
	.byte	$DE
	.byte	$DF
	.byte	$8F
	.byte	$C6
	.byte	$DE
	.byte	$DF
	.byte	$C6
	.byte	$8E
	.byte	$DE
	.byte	$DF
	.byte	$8F
	.byte	$C6
	.byte	$EB
	.byte	$C6
	.byte	$C6
	.byte	$CA
	.byte	$C6
	.byte	$C6
	.byte	$CA
	.byte	$FB
	.byte	$B6
	.byte	$A7
	.byte	$EB
	.byte	$C6
	.byte	$A7
	.byte	$EE
	.byte	$EF
	.byte	$C6
	.byte	$9E
	.byte	$FB
	.byte	$C6
	.byte	$C7
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C7
	.byte	$C6
	.byte	$CA
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$FB
	.byte	$A7
	.byte	$C6
	.byte	$EE
	.byte	$EF
	.byte	$A7
	.byte	$C6
	.byte	$EB
	.byte	$B6
	.byte	$B6
	.byte	$FB
	.byte	$C6
	.byte	$C6
	.byte	$FE
	.byte	$FF
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$F8
	.byte	$F9
	.byte	$BE
	.byte	$BF
	.byte	$C7
	.byte	$EE
	.byte	$EF
	.byte	$C6
	.byte	$BE
	.byte	$BF
	.byte	$F8
	.byte	$F9
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$FE
	.byte	$FF
	.byte	$C6
	.byte	$C6
	.byte	$FB
	.byte	$AB
	.byte	$B6
	.byte	$EB
	.byte	$82
	.byte	$83
	.byte	$C6
	.byte	$A7
	.byte	$C6
	.byte	$BE
	.byte	$BF
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$DE
	.byte	$DF
	.byte	$C6
	.byte	$FE
	.byte	$FF
	.byte	$C6
	.byte	$DE
	.byte	$DF
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$BE
	.byte	$BF
	.byte	$C6
	.byte	$A7
	.byte	$C6
	.byte	$82
	.byte	$83
	.byte	$EB
	.byte	$A7
	.byte	$A7
	.byte	$FB
	.byte	$92
	.byte	$93
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$CE
	.byte	$CF
	.byte	$EE
	.byte	$EF
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$BE
	.byte	$CD
	.byte	$BC
	.byte	$CF
	.byte	$C6
	.byte	$C6
	.byte	$C6
	.byte	$92
	.byte	$93
	.byte	$FB
	.byte	$B6
	.byte	$B6
	.byte	$A8
	.byte	$E8
	.byte	$E9
	.byte	$F8
	.byte	$F9
	.byte	$A7
	.byte	$CE
	.byte	$CF
	.byte	$FE
	.byte	$FF
	.byte	$F8
	.byte	$F9
	.byte	$F8
	.byte	$F9
	.byte	$E8
	.byte	$E9
	.byte	$F8
	.byte	$F9
	.byte	$F8
	.byte	$F9
	.byte	$CE
	.byte	$CC
	.byte	$CC
	.byte	$DB
	.byte	$A7
	.byte	$F8
	.byte	$F9
	.byte	$F8
	.byte	$F9
	.byte	$AA
	.byte	$B6
	.byte	$A7
	.byte	$B6
	.byte	$B6
	.byte	$B6
	.byte	$B6
	.byte	$A7
	.byte	$B6
	.byte	$DE
	.byte	$DF
	.byte	$A7
	.byte	$AF
	.byte	$B6
	.byte	$A7
	.byte	$B9
	.byte	$B6
	.byte	$B9
	.byte	$B6
	.byte	$A7
	.byte	$A7
	.byte	$B7
	.byte	$A8
	.byte	$DE
	.byte	$DD
	.byte	$DD
	.byte	$DF
	.byte	$B6
	.byte	$B7
	.byte	$B6
	.byte	$A7
	.byte	$A7
	.byte	$B6
	.byte	$B6
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$0C
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$C0
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$30
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
_palette_bg:
	.byte	$0F
	.byte	$30
	.byte	$27
	.byte	$07
	.byte	$0F
	.byte	$35
	.byte	$26
	.byte	$07
	.byte	$0F
	.byte	$0F
	.byte	$30
	.byte	$30
	.byte	$0F
	.byte	$21
	.byte	$16
	.byte	$30
_palette_sp:
	.byte	$0F
	.byte	$07
	.byte	$28
	.byte	$38
	.byte	$0F
	.byte	$07
	.byte	$0A
	.byte	$38
	.byte	$0F
	.byte	$07
	.byte	$20
	.byte	$38
	.byte	$0F
	.byte	$07
	.byte	$14
	.byte	$38
_metatiles1:
	.byte	$02
	.byte	$02
	.byte	$02
	.byte	$02
	.byte	$03
	.byte	$04
	.byte	$04
	.byte	$04
	.byte	$04
	.byte	$01
	.byte	$09
	.byte	$09
	.byte	$09
	.byte	$09
	.byte	$02
	.byte	$05
	.byte	$06
	.byte	$08
	.byte	$07
	.byte	$01
	.byte	$05
	.byte	$06
	.byte	$08
	.byte	$07
	.byte	$00
_pellet_tiles:
	.byte	$C6
	.byte	$C7
	.byte	$C8
	.byte	$C9
	.byte	$CA
_blank_tiles:
	.byte	$B6
	.byte	$B7
	.byte	$B8
	.byte	$B9
	.byte	$BA
L2050:
	.byte	$55,$53,$45,$20,$4C,$45,$46,$54,$2F,$52,$49,$47,$48,$54,$20,$54
	.byte	$4F,$20,$43,$48,$41,$4E,$47,$45,$00
L1F40	:=	L2050+0
L1FCA:
	.byte	$42,$52,$49,$41,$4E,$20,$41,$4E,$44,$20,$41,$4C,$41,$4E,$20,$47
	.byte	$41,$4D,$45,$53,$00
L205A:
	.byte	$48,$4F,$4C,$44,$20,$53,$54,$41,$52,$54,$20,$33,$20,$53,$45,$43
	.byte	$4F,$4E,$44,$53,$00
L20BD:
	.byte	$45,$4E,$45,$4D,$59,$20,$53,$45,$45,$4B,$45,$52,$20,$4B,$49,$4C
	.byte	$4C,$45,$44,$00
L1F4A:
	.byte	$48,$4F,$4C,$44,$20,$53,$54,$41,$52,$54,$20,$31,$20,$53,$45,$43
	.byte	$4F,$4E,$44,$00
L1FDE	:=	L1F4A+0
L20B0:
	.byte	$46,$52,$49,$45,$4E,$44,$4C,$59,$20,$46,$49,$52,$45,$20,$4B,$49
	.byte	$4C,$4C,$00
L20A3:
	.byte	$43,$4F,$4C,$4C,$45,$43,$54,$45,$44,$20,$31,$30,$30,$20,$44,$4F
	.byte	$54,$53,$00
L2022:
	.byte	$43,$48,$41,$52,$41,$43,$54,$45,$52,$20,$53,$50,$45,$45,$44,$3A
	.byte	$00
L1F12	:=	L2022+0
L1FE8:
	.byte	$54,$4F,$20,$47,$4F,$20,$54,$4F,$20,$4F,$50,$54,$49,$4F,$4E,$53
	.byte	$00
L1F54:
	.byte	$54,$4F,$20,$53,$54,$41,$52,$54,$20,$47,$41,$4D,$45,$00
L2064	:=	L1F54+0
L2097:
	.byte	$54,$45,$41,$4D,$20,$32,$20,$57,$49,$4E,$53,$21,$00
L208A:
	.byte	$54,$45,$41,$4D,$20,$31,$20,$57,$49,$4E,$53,$21,$00
L20C7:
	.byte	$50,$52,$45,$53,$53,$20,$53,$54,$41,$52,$54,$00
L1FD4:
	.byte	$48,$4F,$4E,$45,$59,$20,$48,$45,$49,$53,$54,$00
L207E:
	.byte	$47,$41,$4D,$45,$20,$4F,$56,$45,$52,$00
L2018	:=	L1FE8+9
L203B:
	.byte	$52,$45,$47,$55,$4C,$41,$52,$00
L1F08	:=	L1FE8+9
L1F36:
	.byte	$20,$20,$46,$41,$53,$54,$20,$00
L202E:
	.byte	$20,$20,$53,$4C,$4F,$57,$20,$00
L1F2B	:=	L203B+0
L2046	:=	L1F36+0
L1F1E	:=	L202E+0

.segment	"BSS"

.segment	"ZEROPAGE"
_doublepad:
	.res	2,$00
_generic_pad:
	.res	1,$00
_prev_pad1:
	.res	1,$00
_prev_pad2:
	.res	1,$00
_prev_pad3:
	.res	1,$00
_prev_pad4:
	.res	1,$00
_pad1:
	.res	1,$00
_pad2:
	.res	1,$00
_pad3:
	.res	1,$00
_pad4:
	.res	1,$00
_game_mode:
	.res	1,$00
_winner:
	.res	1,$00
_game_frame_timer:
	.res	1,$00
_game_timer:
	.res	1,$00
_speed_option:
	.res	1,$00
_force_redraw:
	.res	1,$00
_collision:
	.res	1,$00
_collision_L:
	.res	1,$00
_collision_R:
	.res	1,$00
_collision_U:
	.res	1,$00
_collision_D:
	.res	1,$00
_coordinates:
	.res	1,$00
_temp1:
	.res	1,$00
_temp2:
	.res	1,$00
_temp3:
	.res	1,$00
_temp4:
	.res	1,$00
_temp5:
	.res	2,$00
_temp6:
	.res	2,$00
_tempint:
	.res	2,$00
_eject_L:
	.res	1,$00
_eject_R:
	.res	1,$00
_eject_D:
	.res	1,$00
_eject_U:
	.res	1,$00
_address:
	.res	2,$00
_x:
	.res	1,$00
_y:
	.res	1,$00
_index:
	.res	1,$00
_map:
	.res	1,$00
_scroll_x:
	.res	2,$00
_scroll_y:
	.res	2,$00
_hero_velocity_x:
	.res	2,$00
_hero_velocity_y:
	.res	2,$00
_old_x:
	.res	2,$00
_old_y:
	.res	2,$00
_temp:
	.res	1,$00
_temp_x:
	.res	1,$00
_temp_y:
	.res	1,$00
_temp_x2:
	.res	1,$00
_temp_y2:
	.res	1,$00
_largeindex:
	.res	2,$00
_song:
	.res	1,$00
_bit_index:
	.res	1,$00
_bit_offset:
	.res	1,$00
_frame_counter:
	.res	1,$00
_ai_counter:
	.res	1,$00
_current_player:
	.res	1,$00
_team1_score:
	.res	1,$00
_team2_score:
	.res	1,$00
_win_reason:
	.res	1,$00
.segment	"BSS"
_consumed_dots:
	.res	128,$00
_start_hold_timer:
	.res	1,$00
_start_held:
	.res	1,$00
_Generic:
	.res	4,$00
_GenericBoxGuy:
	.res	4,$00

; ---------------------------------------------------------------
; void __near__ load_room (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_load_room: near

.segment	"CODE"

;
; ppu_off();
;
	jsr     _ppu_off
;
; vram_adr(NAMETABLE_A);
;
	ldx     #$20
	lda     #$00
	jsr     _vram_adr
;
; for (largeindex = 0; largeindex < 1024; ++largeindex)
;
	lda     #$00
	sta     _largeindex
	sta     _largeindex+1
L1B92:	ldx     _largeindex+1
	cpx     #$04
	bcs     L1B93
;
; vram_put(tinyhoney[largeindex]);
;
	lda     #<(_tinyhoney)
	sta     ptr1
	lda     #>(_tinyhoney)
	clc
	adc     _largeindex+1
	sta     ptr1+1
	ldy     _largeindex
	lda     (ptr1),y
	jsr     _vram_put
;
; flush_vram_update2();
;
	jsr     _flush_vram_update2
;
; for (largeindex = 0; largeindex < 1024; ++largeindex)
;
	inc     _largeindex
	bne     L1B92
	inc     _largeindex+1
	jmp     L1B92
;
; ppu_on_all();
;
L1B93:	jmp     _ppu_on_all

.endproc

; ---------------------------------------------------------------
; void __near__ draw_sprites (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_draw_sprites: near

.segment	"CODE"

;
; oam_clear();
;
	jsr     _oam_clear
;
; temp_x = BoxGuy1.x >> 8;
;
	lda     _BoxGuy1+1
	sta     _temp_x
;
; temp_y = BoxGuy1.y >> 8;
;
	lda     _BoxGuy1+3
	sta     _temp_y
;
; if (temp_x == 0)
;
	lda     _temp_x
	bne     L20ED
;
; temp_x = 1;
;
	lda     #$01
	sta     _temp_x
;
; if (temp_y == 0)
;
L20ED:	lda     _temp_y
	bne     L1BAA
;
; temp_y = 1;
;
	lda     #$01
	sta     _temp_y
;
; oam_meta_spr(temp_x, temp_y, gamesprites_smallbee1left0_data);
;
L1BAA:	jsr     decsp2
	lda     _temp_x
	ldy     #$01
	sta     (sp),y
	lda     _temp_y
	dey
	sta     (sp),y
	lda     #<(_gamesprites_smallbee1left0_data)
	ldx     #>(_gamesprites_smallbee1left0_data)
	jsr     _oam_meta_spr
;
; temp_x = BoxGuy2.x >> 8;
;
	lda     _BoxGuy2+1
	sta     _temp_x
;
; temp_y = BoxGuy2.y >> 8;
;
	lda     _BoxGuy2+3
	sta     _temp_y
;
; if (temp_x == 0)
;
	lda     _temp_x
	bne     L20EE
;
; temp_x = 1;
;
	lda     #$01
	sta     _temp_x
;
; if (temp_y == 0)
;
L20EE:	lda     _temp_y
	bne     L1BBA
;
; temp_y = 1;
;
	lda     #$01
	sta     _temp_y
;
; oam_meta_spr(temp_x, temp_y, gamesprites_smallduck1left0_data);
;
L1BBA:	jsr     decsp2
	lda     _temp_x
	ldy     #$01
	sta     (sp),y
	lda     _temp_y
	dey
	sta     (sp),y
	lda     #<(_gamesprites_smallduck1left0_data)
	ldx     #>(_gamesprites_smallduck1left0_data)
	jsr     _oam_meta_spr
;
; temp_x = BoxGuy3.x >> 8;
;
	lda     _BoxGuy3+1
	sta     _temp_x
;
; temp_y = BoxGuy3.y >> 8;
;
	lda     _BoxGuy3+3
	sta     _temp_y
;
; if (temp_x == 0)
;
	lda     _temp_x
	bne     L20EF
;
; temp_x = 1;
;
	lda     #$01
	sta     _temp_x
;
; if (temp_y == 0)
;
L20EF:	lda     _temp_y
	bne     L1BCA
;
; temp_y = 1;
;
	lda     #$01
	sta     _temp_y
;
; oam_meta_spr(temp_x, temp_y, gamesprites_smallbee2left0_data);
;
L1BCA:	jsr     decsp2
	lda     _temp_x
	ldy     #$01
	sta     (sp),y
	lda     _temp_y
	dey
	sta     (sp),y
	lda     #<(_gamesprites_smallbee2left0_data)
	ldx     #>(_gamesprites_smallbee2left0_data)
	jsr     _oam_meta_spr
;
; temp_x = BoxGuy4.x >> 8;
;
	lda     _BoxGuy4+1
	sta     _temp_x
;
; temp_y = BoxGuy4.y >> 8;
;
	lda     _BoxGuy4+3
	sta     _temp_y
;
; if (temp_x == 0)
;
	lda     _temp_x
	bne     L20F0
;
; temp_x = 1;
;
	lda     #$01
	sta     _temp_x
;
; if (temp_y == 0)
;
L20F0:	lda     _temp_y
	bne     L1BDA
;
; temp_y = 1;
;
	lda     #$01
	sta     _temp_y
;
; oam_meta_spr(temp_x, temp_y, gamesprites_smallduck2left0_data);
;
L1BDA:	jsr     decsp2
	lda     _temp_x
	ldy     #$01
	sta     (sp),y
	lda     _temp_y
	dey
	sta     (sp),y
	lda     #<(_gamesprites_smallduck2left0_data)
	ldx     #>(_gamesprites_smallduck2left0_data)
	jmp     _oam_meta_spr

.endproc

; ---------------------------------------------------------------
; void __near__ draw_title_sprites (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_draw_title_sprites: near

.segment	"CODE"

;
; oam_clear();
;
	jsr     _oam_clear
;
; temp_x = BoxGuy1.x >> 8;
;
	lda     _BoxGuy1+1
	sta     _temp_x
;
; temp_y = BoxGuy1.y >> 8;
;
	lda     _BoxGuy1+3
	sta     _temp_y
;
; if (temp_x == 0)
;
	lda     _temp_x
	bne     L20F1
;
; temp_x = 1;
;
	lda     #$01
	sta     _temp_x
;
; if (temp_y == 0)
;
L20F1:	lda     _temp_y
	bne     L1BEC
;
; temp_y = 1;
;
	lda     #$01
	sta     _temp_y
;
; oam_meta_spr(temp_x, temp_y, gamesprites_smallbee1left0_data);
;
L1BEC:	jsr     decsp2
	lda     _temp_x
	ldy     #$01
	sta     (sp),y
	lda     _temp_y
	dey
	sta     (sp),y
	lda     #<(_gamesprites_smallbee1left0_data)
	ldx     #>(_gamesprites_smallbee1left0_data)
	jsr     _oam_meta_spr
;
; temp_x = BoxGuy2.x >> 8;
;
	lda     _BoxGuy2+1
	sta     _temp_x
;
; temp_y = BoxGuy2.y >> 8;
;
	lda     _BoxGuy2+3
	sta     _temp_y
;
; if (temp_x == 0)
;
	lda     _temp_x
	bne     L20F2
;
; temp_x = 1;
;
	lda     #$01
	sta     _temp_x
;
; if (temp_y == 0)
;
L20F2:	lda     _temp_y
	bne     L1BFC
;
; temp_y = 1;
;
	lda     #$01
	sta     _temp_y
;
; oam_meta_spr(temp_x, temp_y, gamesprites_smallduck1left0_data);
;
L1BFC:	jsr     decsp2
	lda     _temp_x
	ldy     #$01
	sta     (sp),y
	lda     _temp_y
	dey
	sta     (sp),y
	lda     #<(_gamesprites_smallduck1left0_data)
	ldx     #>(_gamesprites_smallduck1left0_data)
	jsr     _oam_meta_spr
;
; temp_x = BoxGuy3.x >> 8;
;
	lda     _BoxGuy3+1
	sta     _temp_x
;
; temp_y = BoxGuy3.y >> 8;
;
	lda     _BoxGuy3+3
	sta     _temp_y
;
; if (temp_x == 0)
;
	lda     _temp_x
	bne     L20F3
;
; temp_x = 1;
;
	lda     #$01
	sta     _temp_x
;
; if (temp_y == 0)
;
L20F3:	lda     _temp_y
	bne     L1C0C
;
; temp_y = 1;
;
	lda     #$01
	sta     _temp_y
;
; oam_meta_spr(temp_x, temp_y, gamesprites_smallbee2left0_data);
;
L1C0C:	jsr     decsp2
	lda     _temp_x
	ldy     #$01
	sta     (sp),y
	lda     _temp_y
	dey
	sta     (sp),y
	lda     #<(_gamesprites_smallbee2left0_data)
	ldx     #>(_gamesprites_smallbee2left0_data)
	jsr     _oam_meta_spr
;
; temp_x = BoxGuy4.x >> 8;
;
	lda     _BoxGuy4+1
	sta     _temp_x
;
; temp_y = BoxGuy4.y >> 8;
;
	lda     _BoxGuy4+3
	sta     _temp_y
;
; if (temp_x == 0)
;
	lda     _temp_x
	bne     L20F4
;
; temp_x = 1;
;
	lda     #$01
	sta     _temp_x
;
; if (temp_y == 0)
;
L20F4:	lda     _temp_y
	bne     L1C1C
;
; temp_y = 1;
;
	lda     #$01
	sta     _temp_y
;
; oam_meta_spr(temp_x, temp_y, gamesprites_smallduck2left0_data);
;
L1C1C:	jsr     decsp2
	lda     _temp_x
	ldy     #$01
	sta     (sp),y
	lda     _temp_y
	dey
	sta     (sp),y
	lda     #<(_gamesprites_smallduck2left0_data)
	ldx     #>(_gamesprites_smallduck2left0_data)
	jmp     _oam_meta_spr

.endproc

; ---------------------------------------------------------------
; void __near__ movement (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_movement: near

.segment	"CODE"

;
; old_x = GenericBoxGuy.x;
;
	lda     _GenericBoxGuy+1
	sta     _old_x+1
	lda     _GenericBoxGuy
	sta     _old_x
;
; if (generic_pad & PAD_LEFT)
;
	lda     _generic_pad
	and     #$02
	beq     L20FB
;
; hero_velocity_x = -speed_option;
;
	lda     _speed_option
	eor     #$FF
	clc
	adc     #$01
	ldx     #$00
;
; else if (generic_pad & PAD_RIGHT)
;
	jmp     L20FD
L20FB:	lda     _generic_pad
	ldx     #$00
	and     #$01
	beq     L20FD
;
; hero_velocity_x = speed_option;
;
	stx     _hero_velocity_x+1
	lda     _speed_option
	sta     _hero_velocity_x
;
; else
;
	jmp     L1C30
;
; hero_velocity_x = 0;
;
L20FD:	sta     _hero_velocity_x
	stx     _hero_velocity_x+1
;
; GenericBoxGuy.x += hero_velocity_x;
;
L1C30:	lda     _hero_velocity_x
	clc
	adc     _GenericBoxGuy
	sta     _GenericBoxGuy
	lda     _hero_velocity_x+1
	adc     _GenericBoxGuy+1
	sta     _GenericBoxGuy+1
;
; if (GenericBoxGuy.x > 0xf000)
;
	lda     _GenericBoxGuy
	cmp     #$01
	lda     _GenericBoxGuy+1
	sbc     #$F0
	bcc     L2100
;
; if (old_x >= 0x8000)
;
	lda     _old_x
	cmp     #$00
	lda     _old_x+1
	sbc     #$80
	txa
	bcc     L20FF
;
; GenericBoxGuy.x = 0xf000; // max right
;
	ldx     #$F0
;
; GenericBoxGuy.x = 0x0000; // max left
;
L20FF:	sta     _GenericBoxGuy
	stx     _GenericBoxGuy+1
;
; Generic.x = GenericBoxGuy.x >> 8; // the collision routine needs an 8 bit value
;
L2100:	lda     _GenericBoxGuy+1
	sta     _Generic
;
; Generic.y = GenericBoxGuy.y >> 8;
;
	lda     _GenericBoxGuy+3
	sta     _Generic+1
;
; Generic.width = HERO_WIDTH;
;
	lda     #$06
	sta     _Generic+2
;
; Generic.height = HERO_HEIGHT;
;
	sta     _Generic+3
;
; if (hero_velocity_x < 0)
;
	ldx     _hero_velocity_x+1
	cpx     #$80
	bcc     L1C46
;
; if (bg_coll_L())
;
	jsr     _bg_coll_L
;
; else if (hero_velocity_x > 0)
;
	jmp     L210F
L1C46:	lda     _hero_velocity_x
	cmp     #$01
	lda     _hero_velocity_x+1
	sbc     #$00
	bvs     L1C4F
	eor     #$80
L1C4F:	bpl     L1C50
;
; if (bg_coll_R())
;
	jsr     _bg_coll_R
L210F:	tax
	beq     L1C50
;
; GenericBoxGuy.x = old_x; // revert to old position
;
	lda     _old_x+1
	sta     _GenericBoxGuy+1
	lda     _old_x
	sta     _GenericBoxGuy
;
; old_y = GenericBoxGuy.y;
;
L1C50:	lda     _GenericBoxGuy+2+1
	sta     _old_y+1
	lda     _GenericBoxGuy+2
	sta     _old_y
;
; if (generic_pad & PAD_UP)
;
	lda     _generic_pad
	and     #$08
	beq     L2101
;
; hero_velocity_y = -speed_option;
;
	lda     _speed_option
	eor     #$FF
	clc
	adc     #$01
	ldx     #$00
;
; else if (generic_pad & PAD_DOWN)
;
	jmp     L2103
L2101:	lda     _generic_pad
	ldx     #$00
	and     #$04
	beq     L2103
;
; hero_velocity_y = speed_option;
;
	stx     _hero_velocity_y+1
	lda     _speed_option
	sta     _hero_velocity_y
;
; else
;
	jmp     L1C5F
;
; hero_velocity_y = 0;
;
L2103:	sta     _hero_velocity_y
	stx     _hero_velocity_y+1
;
; GenericBoxGuy.y += hero_velocity_y;
;
L1C5F:	lda     _hero_velocity_y
	clc
	adc     _GenericBoxGuy+2
	sta     _GenericBoxGuy+2
	lda     _hero_velocity_y+1
	adc     _GenericBoxGuy+2+1
	sta     _GenericBoxGuy+2+1
;
; if (GenericBoxGuy.y > 0xe000)
;
	lda     _GenericBoxGuy+2
	cmp     #$01
	lda     _GenericBoxGuy+2+1
	sbc     #$E0
	bcc     L2106
;
; if (old_y >= 0x8000)
;
	lda     _old_y
	cmp     #$00
	lda     _old_y+1
	sbc     #$80
	txa
	bcc     L2105
;
; GenericBoxGuy.y = 0xe000; // max down
;
	ldx     #$E0
;
; GenericBoxGuy.y = 0x0000; // max up
;
L2105:	sta     _GenericBoxGuy+2
	stx     _GenericBoxGuy+2+1
;
; Generic.x = GenericBoxGuy.x >> 8; // the collision routine needs an 8 bit value
;
L2106:	lda     _GenericBoxGuy+1
	sta     _Generic
;
; Generic.y = GenericBoxGuy.y >> 8;
;
	lda     _GenericBoxGuy+3
	sta     _Generic+1
;
; if (hero_velocity_y < 0)
;
	ldx     _hero_velocity_y+1
	cpx     #$80
	bcc     L1C71
;
; if (bg_coll_U())
;
	jsr     _bg_coll_U
;
; else if (hero_velocity_y > 0)
;
	jmp     L2110
L1C71:	lda     _hero_velocity_y
	cmp     #$01
	lda     _hero_velocity_y+1
	sbc     #$00
	bvs     L1C7A
	eor     #$80
L1C7A:	bpl     L1C7B
;
; if (bg_coll_D())
;
	jsr     _bg_coll_D
L2110:	tax
	beq     L1C7B
;
; GenericBoxGuy.y = old_y; // revert to old position
;
	lda     _old_y+1
	sta     _GenericBoxGuy+2+1
	lda     _old_y
	sta     _GenericBoxGuy+2
;
; check_tile_and_collect();
;
L1C7B:	jmp     _check_tile_and_collect

.endproc

; ---------------------------------------------------------------
; void __near__ check_tile_and_collect (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_check_tile_and_collect: near

.segment	"CODE"

;
; if (current_player != 1 && current_player != 3)
;
	ldx     #$00
	lda     _current_player
	cmp     #$01
	beq     L2116
	cmp     #$03
	beq     L2116
;
; return; // Chasers cannot collect dots
;
	rts
;
; temp_x = (Generic.x + 4) >> 3; // get this between 0-30
;
L2116:	lda     _Generic
	clc
	adc     #$04
	bcc     L1D06
	inx
L1D06:	jsr     shrax3
	sta     _temp_x
;
; temp_y = (Generic.y + 2) >> 3; // get this between 0-32
;
	ldx     #$00
	lda     _Generic+1
	clc
	adc     #$02
	bcc     L1D0A
	inx
L1D0A:	jsr     shrax3
	sta     _temp_y
;
; largeindex = (temp_y << 5) + temp_x;
;
	ldx     #$00
	lda     _temp_y
	jsr     aslax4
	stx     tmp1
	asl     a
	rol     tmp1
	ldx     tmp1
	clc
	adc     _temp_x
	bcc     L2111
	inx
L2111:	sta     _largeindex
	stx     _largeindex+1
;
; temp = tinyhoney[largeindex];
;
	lda     #<(_tinyhoney)
	sta     ptr1
	lda     #>(_tinyhoney)
	clc
	adc     _largeindex+1
	sta     ptr1+1
	ldy     _largeindex
	lda     (ptr1),y
	sta     _temp
;
; for (index = 0; index < 5; index++)
;
	lda     #$00
	sta     _index
L2117:	lda     _index
	cmp     #$05
	bcc     L2119
;
; }
;
	rts
;
; if (temp == pellet_tiles[index])
;
L2119:	ldy     _index
	lda     _pellet_tiles,y
	cmp     _temp
	jne     L1D19
;
; if (!is_dot_consumed(largeindex))
;
	lda     _largeindex
	ldx     _largeindex+1
	jsr     _is_dot_consumed
	tax
	beq     L211A
;
; }
;
	rts
;
; mark_dot_consumed(largeindex);
;
L211A:	lda     _largeindex
	ldx     _largeindex+1
	jsr     _mark_dot_consumed
;
; one_vram_buffer(blank_tiles[frame_counter % 5], NTADR_A(temp_x, temp_y));
;
	lda     _frame_counter
	jsr     pusha0
	lda     #$05
	jsr     tosumoda0
	sta     ptr1
	txa
	clc
	adc     #>(_blank_tiles)
	sta     ptr1+1
	ldy     #<(_blank_tiles)
	lda     (ptr1),y
	jsr     pusha
	ldx     #$00
	lda     _temp_y
	jsr     aslax4
	stx     tmp1
	asl     a
	rol     tmp1
	sta     ptr1
	lda     _temp_x
	ora     ptr1
	pha
	lda     tmp1
	ora     #$20
	tax
	pla
	jsr     _one_vram_buffer
;
; if (current_player == 1)
;
	lda     _current_player
	cmp     #$01
	bne     L2118
;
; sfx_play(SFX_TEAM1_DOT_COLLECT, 0);
;
	lda     #$00
	jsr     pusha
	jsr     _sfx_play
;
; team1_score++;
;
	inc     _team1_score
;
; if (team1_score >= 100)
;
	lda     _team1_score
	cmp     #$64
	bcc     L1D42
;
; sfx_play(SFX_TEAM1_WIN, 0);
;
	lda     #$02
	jsr     pusha
	lda     #$00
	jsr     _sfx_play
;
; winner = ONETWO_WINNER;
;
	lda     #$00
	sta     _winner
;
; win_reason = WIN_DOTS;
;
	sta     _win_reason
;
; init_gameover_loop();
;
	jmp     _init_gameover_loop
;
; else if (current_player == 3)
;
L2118:	lda     _current_player
	cmp     #$03
	bne     L1D12
;
; sfx_play(SFX_TEAM2_DOT_COLLECT, 0);
;
	lda     #$01
	jsr     pusha
	lda     #$00
	jsr     _sfx_play
;
; team2_score++;
;
	inc     _team2_score
;
; if (team2_score >= 100)
;
	lda     _team2_score
	cmp     #$64
	bcc     L1D12
;
; sfx_play(SFX_TEAM2_WIN, 0);
;
	lda     #$03
	jsr     pusha
	lda     #$00
	jsr     _sfx_play
;
; winner = THREEFOUR_WINNER;
;
	lda     #$01
	sta     _winner
;
; win_reason = WIN_DOTS;
;
	lda     #$00
	sta     _win_reason
;
; init_gameover_loop();
;
	jmp     _init_gameover_loop
;
; break;
;
L1D42:	rts
;
; else if (temp == blank_tiles[index])
;
L1D19:	ldy     _index
	lda     _blank_tiles,y
	cmp     _temp
;
; break;
;
	beq     L1D12
;
; for (index = 0; index < 5; index++)
;
	inc     _index
	jmp     L2117
;
; }
;
L1D12:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ debug_extras (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_debug_extras: near

.segment	"CODE"

;
; temp1 = (team1_score / 10) + 0x30;
;
	lda     _team1_score
	jsr     pusha0
	lda     #$0A
	jsr     tosudiva0
	clc
	adc     #$30
	sta     _temp1
;
; one_vram_buffer(temp1, NTADR_A(6, 1));
;
	jsr     pusha
	ldx     #$20
	lda     #$26
	jsr     _one_vram_buffer
;
; temp1 = (team1_score % 10) + 0x30;
;
	lda     _team1_score
	jsr     pusha0
	lda     #$0A
	jsr     tosumoda0
	clc
	adc     #$30
	sta     _temp1
;
; one_vram_buffer(temp1, NTADR_A(7, 1));
;
	jsr     pusha
	ldx     #$20
	lda     #$27
	jsr     _one_vram_buffer
;
; temp1 = (game_timer / 10) + 0x30;
;
	lda     _game_timer
	jsr     pusha0
	lda     #$0A
	jsr     tosudiva0
	clc
	adc     #$30
	sta     _temp1
;
; one_vram_buffer(temp1, NTADR_A(15, 1));
;
	jsr     pusha
	ldx     #$20
	lda     #$2F
	jsr     _one_vram_buffer
;
; temp1 = (game_timer % 10) + 0x30;
;
	lda     _game_timer
	jsr     pusha0
	lda     #$0A
	jsr     tosumoda0
	clc
	adc     #$30
	sta     _temp1
;
; one_vram_buffer(temp1, NTADR_A(16, 1));
;
	jsr     pusha
	ldx     #$20
	lda     #$30
	jsr     _one_vram_buffer
;
; temp1 = (team2_score / 10) + 0x30;
;
	lda     _team2_score
	jsr     pusha0
	lda     #$0A
	jsr     tosudiva0
	clc
	adc     #$30
	sta     _temp1
;
; one_vram_buffer(temp1, NTADR_A(23, 1));
;
	jsr     pusha
	ldx     #$20
	lda     #$37
	jsr     _one_vram_buffer
;
; temp1 = (team2_score % 10) + 0x30;
;
	lda     _team2_score
	jsr     pusha0
	lda     #$0A
	jsr     tosumoda0
	clc
	adc     #$30
	sta     _temp1
;
; one_vram_buffer(temp1, NTADR_A(24, 1));
;
	jsr     pusha
	ldx     #$20
	lda     #$38
	jmp     _one_vram_buffer

.endproc

; ---------------------------------------------------------------
; void __near__ read_controllers (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_read_controllers: near

.segment	"CODE"

;
; doublepad = pad_poll_4score_1_3();
;
	jsr     _pad_poll_4score_1_3
	sta     _doublepad
	stx     _doublepad+1
;
; pad1 = high_byte(doublepad); // the high byte is the first controller's input
;
	lda     _doublepad+1
	sta     _pad1
;
; pad3 = low_byte(doublepad);  // low byte is the third controller's input
;
	lda     _doublepad
	sta     _pad3
;
; doublepad = pad_poll_4score_2_4();
;
	jsr     _pad_poll_4score_2_4
	sta     _doublepad
	stx     _doublepad+1
;
; pad2 = high_byte(doublepad);
;
	lda     _doublepad+1
	sta     _pad2
;
; pad4 = low_byte(doublepad);
;
	lda     _doublepad
	sta     _pad4
;
; seeker_ai();
;
	jsr     _seeker_ai
;
; chaser_ai();
;
	jmp     _chaser_ai

.endproc

; ---------------------------------------------------------------
; void __near__ seeker_ai (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_seeker_ai: near

.segment	"CODE"

;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ chaser_ai (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_chaser_ai: near

.segment	"CODE"

;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ game_loop (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_game_loop: near

.segment	"CODE"

;
; ppu_wait_nmi();
;
	jsr     _ppu_wait_nmi
;
; debug_extras();
;
	jsr     _debug_extras
;
; frame_counter++;
;
	inc     _frame_counter
;
; game_frame_timer++;
;
	inc     _game_frame_timer
;
; if (game_frame_timer >= TIMER_TICK_FREQUENCY) // Tick down every ~24.24 frames (40s/99)
;
	lda     _game_frame_timer
	cmp     #$18
	bcc     L2122
;
; game_frame_timer = 0; // reset the frame timer
;
	lda     #$00
	sta     _game_frame_timer
;
; game_timer--;
;
	dec     _game_timer
;
; if (game_timer == 0)
;
	bne     L2122
;
; if (team1_score > team2_score)
;
	lda     _team1_score
	sec
	sbc     _team2_score
	bcc     L2120
	beq     L2120
;
; winner = ONETWO_WINNER;
;
	lda     #$00
	sta     _winner
;
; win_reason = WIN_TIME_UP;
;
	lda     #$03
	sta     _win_reason
;
; sfx_play(SFX_TEAM1_WIN, 0);
;
	lda     #$02
;
; else if (team2_score > team1_score)
;
	jmp     L2127
L2120:	lda     _team2_score
	sec
	sbc     _team1_score
	bcc     L2121
	beq     L2121
;
; winner = THREEFOUR_WINNER;
;
	lda     #$01
	sta     _winner
;
; win_reason = WIN_TIME_UP;
;
	lda     #$03
	sta     _win_reason
;
; else
;
	jmp     L2127
;
; winner = TIE_WINNER;
;
L2121:	lda     #$02
	sta     _winner
;
; win_reason = WIN_TIME_UP;
;
	lda     #$03
	sta     _win_reason
;
; sfx_play(SFX_DRAW_GAME, 0);
;
	lda     #$04
L2127:	jsr     pusha
	lda     #$00
	jsr     _sfx_play
;
; init_gameover_loop();
;
	jsr     _init_gameover_loop
;
; ai_counter++;
;
L2122:	inc     _ai_counter
;
; read_controllers();
;
	jsr     _read_controllers
;
; current_player = 1;
;
	lda     #$01
	sta     _current_player
;
; GenericBoxGuy = BoxGuy1;
;
	lda     _BoxGuy1+3
	sta     sreg+1
	lda     _BoxGuy1+2
	sta     sreg
	ldx     _BoxGuy1+1
	lda     _BoxGuy1
	sta     _GenericBoxGuy
	stx     _GenericBoxGuy+1
	ldy     sreg
	sty     _GenericBoxGuy+2
	ldy     sreg+1
	sty     _GenericBoxGuy+3
;
; generic_pad = pad1;
;
	lda     _pad1
	sta     _generic_pad
;
; movement(); // this assigns old_x and old_y
;
	jsr     _movement
;
; temp_x = GenericBoxGuy.x >> 8;
;
	lda     _GenericBoxGuy+1
	sta     _temp_x
;
; temp_y = GenericBoxGuy.y >> 8;
;
	lda     _GenericBoxGuy+3
	sta     _temp_y
;
; temp_x2 = BoxGuy3.x >> 8;
;
	lda     _BoxGuy3+1
	sta     _temp_x2
;
; temp_y2 = BoxGuy3.y >> 8;
;
	lda     _BoxGuy3+3
	sta     _temp_y2
;
; if (sprite_collision()) // 1 and 3, both seekers
;
	jsr     _sprite_collision
	tax
	beq     L1DF5
;
; BoxGuy1.x = old_x;
;
	lda     _old_x+1
	sta     _BoxGuy1+1
	lda     _old_x
	sta     _BoxGuy1
;
; BoxGuy1.y = old_y;
;
	lda     _old_y+1
	sta     _BoxGuy1+2+1
	lda     _old_y
;
; else
;
	jmp     L211C
;
; BoxGuy1.x = GenericBoxGuy.x;
;
L1DF5:	lda     _GenericBoxGuy+1
	sta     _BoxGuy1+1
	lda     _GenericBoxGuy
	sta     _BoxGuy1
;
; BoxGuy1.y = GenericBoxGuy.y;
;
	lda     _GenericBoxGuy+2+1
	sta     _BoxGuy1+2+1
	lda     _GenericBoxGuy+2
L211C:	sta     _BoxGuy1+2
;
; current_player = 2;
;
	lda     #$02
	sta     _current_player
;
; GenericBoxGuy = BoxGuy2;
;
	lda     _BoxGuy2+3
	sta     sreg+1
	lda     _BoxGuy2+2
	sta     sreg
	ldx     _BoxGuy2+1
	lda     _BoxGuy2
	sta     _GenericBoxGuy
	stx     _GenericBoxGuy+1
	ldy     sreg
	sty     _GenericBoxGuy+2
	ldy     sreg+1
	sty     _GenericBoxGuy+3
;
; generic_pad = pad2;
;
	lda     _pad2
	sta     _generic_pad
;
; movement();
;
	jsr     _movement
;
; temp_x = GenericBoxGuy.x >> 8;
;
	lda     _GenericBoxGuy+1
	sta     _temp_x
;
; temp_y = GenericBoxGuy.y >> 8;
;
	lda     _GenericBoxGuy+3
	sta     _temp_y
;
; temp_x2 = BoxGuy4.x >> 8;
;
	lda     _BoxGuy4+1
	sta     _temp_x2
;
; temp_y2 = BoxGuy4.y >> 8;
;
	lda     _BoxGuy4+3
	sta     _temp_y2
;
; if (sprite_collision()) // player 2 blocks player 4 (chasers)
;
	jsr     _sprite_collision
	tax
	beq     L1E0F
;
; BoxGuy2.x = old_x;
;
	lda     _old_x+1
	sta     _BoxGuy2+1
	lda     _old_x
	sta     _BoxGuy2
;
; BoxGuy2.y = old_y;
;
	lda     _old_y+1
	sta     _BoxGuy2+2+1
	lda     _old_y
;
; else
;
	jmp     L211D
;
; BoxGuy2.x = GenericBoxGuy.x;
;
L1E0F:	lda     _GenericBoxGuy+1
	sta     _BoxGuy2+1
	lda     _GenericBoxGuy
	sta     _BoxGuy2
;
; BoxGuy2.y = GenericBoxGuy.y;
;
	lda     _GenericBoxGuy+2+1
	sta     _BoxGuy2+2+1
	lda     _GenericBoxGuy+2
L211D:	sta     _BoxGuy2+2
;
; current_player = 3;
;
	lda     #$03
	sta     _current_player
;
; GenericBoxGuy = BoxGuy3;
;
	lda     _BoxGuy3+3
	sta     sreg+1
	lda     _BoxGuy3+2
	sta     sreg
	ldx     _BoxGuy3+1
	lda     _BoxGuy3
	sta     _GenericBoxGuy
	stx     _GenericBoxGuy+1
	ldy     sreg
	sty     _GenericBoxGuy+2
	ldy     sreg+1
	sty     _GenericBoxGuy+3
;
; generic_pad = pad3;
;
	lda     _pad3
	sta     _generic_pad
;
; movement();
;
	jsr     _movement
;
; temp_x = BoxGuy1.x >> 8;
;
	lda     _BoxGuy1+1
	sta     _temp_x
;
; temp_y = BoxGuy1.y >> 8;
;
	lda     _BoxGuy1+3
	sta     _temp_y
;
; temp_x2 = GenericBoxGuy.x >> 8;
;
	lda     _GenericBoxGuy+1
	sta     _temp_x2
;
; temp_y2 = GenericBoxGuy.y >> 8;
;
	lda     _GenericBoxGuy+3
	sta     _temp_y2
;
; if (sprite_collision()) // 1 blocks 3 (seekers)
;
	jsr     _sprite_collision
	tax
	beq     L1E29
;
; BoxGuy3.x = old_x;
;
	lda     _old_x+1
	sta     _BoxGuy3+1
	lda     _old_x
	sta     _BoxGuy3
;
; BoxGuy3.y = old_y;
;
	lda     _old_y+1
	sta     _BoxGuy3+2+1
	lda     _old_y
;
; else
;
	jmp     L211E
;
; BoxGuy3.x = GenericBoxGuy.x;
;
L1E29:	lda     _GenericBoxGuy+1
	sta     _BoxGuy3+1
	lda     _GenericBoxGuy
	sta     _BoxGuy3
;
; BoxGuy3.y = GenericBoxGuy.y;
;
	lda     _GenericBoxGuy+2+1
	sta     _BoxGuy3+2+1
	lda     _GenericBoxGuy+2
L211E:	sta     _BoxGuy3+2
;
; current_player = 4;
;
	lda     #$04
	sta     _current_player
;
; GenericBoxGuy = BoxGuy4;
;
	lda     _BoxGuy4+3
	sta     sreg+1
	lda     _BoxGuy4+2
	sta     sreg
	ldx     _BoxGuy4+1
	lda     _BoxGuy4
	sta     _GenericBoxGuy
	stx     _GenericBoxGuy+1
	ldy     sreg
	sty     _GenericBoxGuy+2
	ldy     sreg+1
	sty     _GenericBoxGuy+3
;
; generic_pad = pad4;
;
	lda     _pad4
	sta     _generic_pad
;
; movement();
;
	jsr     _movement
;
; temp_x = BoxGuy2.x >> 8;
;
	lda     _BoxGuy2+1
	sta     _temp_x
;
; temp_y = BoxGuy2.y >> 8;
;
	lda     _BoxGuy2+3
	sta     _temp_y
;
; temp_x2 = GenericBoxGuy.x >> 8;
;
	lda     _GenericBoxGuy+1
	sta     _temp_x2
;
; temp_y2 = GenericBoxGuy.y >> 8;
;
	lda     _GenericBoxGuy+3
	sta     _temp_y2
;
; if (sprite_collision()) // 2 blocks 4 (seekers)
;
	jsr     _sprite_collision
	tax
	beq     L1E43
;
; BoxGuy4.x = old_x;
;
	lda     _old_x+1
	sta     _BoxGuy4+1
	lda     _old_x
	sta     _BoxGuy4
;
; BoxGuy4.y = old_y;
;
	lda     _old_y+1
	sta     _BoxGuy4+2+1
	lda     _old_y
;
; else
;
	jmp     L211F
;
; BoxGuy4.x = GenericBoxGuy.x;
;
L1E43:	lda     _GenericBoxGuy+1
	sta     _BoxGuy4+1
	lda     _GenericBoxGuy
	sta     _BoxGuy4
;
; BoxGuy4.y = GenericBoxGuy.y;
;
	lda     _GenericBoxGuy+2+1
	sta     _BoxGuy4+2+1
	lda     _GenericBoxGuy+2
L211F:	sta     _BoxGuy4+2
;
; temp_x = BoxGuy1.x >> 8;
;
	lda     _BoxGuy1+1
	sta     _temp_x
;
; temp_y = BoxGuy1.y >> 8;
;
	lda     _BoxGuy1+3
	sta     _temp_y
;
; temp_x2 = BoxGuy2.x >> 8;
;
	lda     _BoxGuy2+1
	sta     _temp_x2
;
; temp_y2 = BoxGuy2.y >> 8;
;
	lda     _BoxGuy2+3
	sta     _temp_y2
;
; if (sprite_collision())
;
	jsr     _sprite_collision
	tax
	beq     L2123
;
; winner = THREEFOUR_WINNER;
;
	lda     #$01
	sta     _winner
;
; win_reason = WIN_FRIENDLY_FIRE;
;
	sta     _win_reason
;
; init_gameover_loop();
;
	jsr     _init_gameover_loop
;
; temp_x = BoxGuy3.x >> 8;
;
L2123:	lda     _BoxGuy3+1
	sta     _temp_x
;
; temp_y = BoxGuy3.y >> 8;
;
	lda     _BoxGuy3+3
	sta     _temp_y
;
; temp_x2 = BoxGuy4.x >> 8;
;
	lda     _BoxGuy4+1
	sta     _temp_x2
;
; temp_y2 = BoxGuy4.y >> 8;
;
	lda     _BoxGuy4+3
	sta     _temp_y2
;
; if (sprite_collision())
;
	jsr     _sprite_collision
	tax
	beq     L2124
;
; sfx_play(SFX_DUCKEATSBEE, 0);
;
	lda     #$07
	jsr     pusha
	lda     #$00
	jsr     _sfx_play
;
; winner = ONETWO_WINNER;
;
	lda     #$00
	sta     _winner
;
; win_reason = WIN_FRIENDLY_FIRE;
;
	lda     #$01
	sta     _win_reason
;
; init_gameover_loop();
;
	jsr     _init_gameover_loop
;
; temp_x = BoxGuy1.x >> 8;
;
L2124:	lda     _BoxGuy1+1
	sta     _temp_x
;
; temp_y = BoxGuy1.y >> 8;
;
	lda     _BoxGuy1+3
	sta     _temp_y
;
; temp_x2 = BoxGuy4.x >> 8;
;
	lda     _BoxGuy4+1
	sta     _temp_x2
;
; temp_y2 = BoxGuy4.y >> 8;
;
	lda     _BoxGuy4+3
	sta     _temp_y2
;
; if (sprite_collision())
;
	jsr     _sprite_collision
	tax
	beq     L2125
;
; sfx_play(SFX_DUCKEATSBEE, 0);
;
	lda     #$07
	jsr     pusha
	lda     #$00
	jsr     _sfx_play
;
; winner = THREEFOUR_WINNER;
;
	lda     #$01
	sta     _winner
;
; win_reason = WIN_ENEMY_KILL;
;
	lda     #$02
	sta     _win_reason
;
; init_gameover_loop();
;
	jsr     _init_gameover_loop
;
; temp_x = BoxGuy2.x >> 8;
;
L2125:	lda     _BoxGuy2+1
	sta     _temp_x
;
; temp_y = BoxGuy2.y >> 8;
;
	lda     _BoxGuy2+3
	sta     _temp_y
;
; temp_x2 = BoxGuy3.x >> 8;
;
	lda     _BoxGuy3+1
	sta     _temp_x2
;
; temp_y2 = BoxGuy3.y >> 8;
;
	lda     _BoxGuy3+3
	sta     _temp_y2
;
; if (sprite_collision())
;
	jsr     _sprite_collision
	tax
	beq     L1E89
;
; winner = ONETWO_WINNER;
;
	lda     #$00
	sta     _winner
;
; win_reason = WIN_ENEMY_KILL;
;
	lda     #$02
	sta     _win_reason
;
; init_gameover_loop();
;
	jsr     _init_gameover_loop
;
; draw_sprites();
;
L1E89:	jmp     _draw_sprites

.endproc

; ---------------------------------------------------------------
; void __near__ title_loop (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_title_loop: near

.segment	"CODE"

;
; ppu_wait_nmi();
;
L1E92:	jsr     _ppu_wait_nmi
;
; pad1 = pad_poll(0);
;
	lda     #$00
	jsr     _pad_poll
	sta     _pad1
;
; pad2 = pad_poll(1);
;
	lda     #$01
	jsr     _pad_poll
	sta     _pad2
;
; pad3 = pad_poll(2);
;
	lda     #$02
	jsr     _pad_poll
	sta     _pad3
;
; pad4 = pad_poll(3);
;
	lda     #$03
	jsr     _pad_poll
	sta     _pad4
;
; if (pad1 & PAD_UP)
;
	lda     _pad1
	and     #$08
	beq     L2128
;
; if ((BoxGuy1.y >> 8) > 160)
;
	lda     _BoxGuy1+3
	cmp     #$A1
	bcc     L2128
;
; BoxGuy1.y -= 0x0400; // Move up 4 pixels (0x0400 = 1024 sub-pixels)
;
	lda     _BoxGuy1+2
	sec
	sbc     #$00
	sta     _BoxGuy1+2
	lda     _BoxGuy1+2+1
	sbc     #$04
	sta     _BoxGuy1+2+1
;
; if (pad2 & PAD_UP)
;
L2128:	lda     _pad2
	and     #$08
	beq     L2129
;
; if ((BoxGuy2.y >> 8) > 160)
;
	lda     _BoxGuy2+3
	cmp     #$A1
	bcc     L2129
;
; BoxGuy2.y -= 0x0400;
;
	lda     _BoxGuy2+2
	sec
	sbc     #$00
	sta     _BoxGuy2+2
	lda     _BoxGuy2+2+1
	sbc     #$04
	sta     _BoxGuy2+2+1
;
; if (pad3 & PAD_UP)
;
L2129:	lda     _pad3
	and     #$08
	beq     L212A
;
; if ((BoxGuy3.y >> 8) > 160)
;
	lda     _BoxGuy3+3
	cmp     #$A1
	bcc     L212A
;
; BoxGuy3.y -= 0x0400;
;
	lda     _BoxGuy3+2
	sec
	sbc     #$00
	sta     _BoxGuy3+2
	lda     _BoxGuy3+2+1
	sbc     #$04
	sta     _BoxGuy3+2+1
;
; if (pad4 & PAD_UP)
;
L212A:	lda     _pad4
	and     #$08
	beq     L212B
;
; if ((BoxGuy4.y >> 8) > 160)
;
	lda     _BoxGuy4+3
	cmp     #$A1
	bcc     L212B
;
; BoxGuy4.y -= 0x0400;
;
	lda     _BoxGuy4+2
	sec
	sbc     #$00
	sta     _BoxGuy4+2
	lda     _BoxGuy4+2+1
	sbc     #$04
	sta     _BoxGuy4+2+1
;
; if (pad1 & PAD_START || pad2 & PAD_START || pad3 & PAD_START || pad4 & PAD_START)
;
L212B:	lda     _pad1
	and     #$10
	bne     L212C
	lda     _pad2
	and     #$10
	bne     L212C
	lda     _pad3
	and     #$10
	bne     L212C
	lda     _pad4
	and     #$10
	beq     L212F
;
; if (!start_held)
;
L212C:	lda     _start_held
	bne     L212D
;
; start_held = 1;
;
	lda     #$01
	sta     _start_held
;
; start_hold_timer = 0;
;
	lda     #$00
	sta     _start_hold_timer
;
; start_hold_timer++;
;
L212D:	inc     _start_hold_timer
;
; if (start_hold_timer >= 30)
;
	lda     _start_hold_timer
	cmp     #$1E
	bcc     L1ECC
;
; init_options_loop();
;
	jmp     _init_options_loop
;
; start_held = 0;
;
L212F:	sta     _start_held
;
; start_hold_timer = 0;
;
	sta     _start_hold_timer
;
; draw_title_sprites();
;
L1ECC:	jsr     _draw_title_sprites
;
; while (1)
;
	jmp     L1E92

.endproc

; ---------------------------------------------------------------
; void __near__ options_loop (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_options_loop: near

.segment	"CODE"

;
; ppu_wait_nmi();
;
L1ED3:	jsr     _ppu_wait_nmi
;
; frame_counter++;
;
	inc     _frame_counter
;
; read_controllers();
;
	jsr     _read_controllers
;
; if (pad1 != prev_pad1 || pad2 != prev_pad2 || pad3 != prev_pad3 || pad4 != prev_pad4)
;
	lda     _prev_pad1
	cmp     _pad1
	bne     L2137
	lda     _prev_pad2
	cmp     _pad2
	bne     L2137
	lda     _prev_pad3
	cmp     _pad3
	bne     L2137
	lda     _prev_pad4
	cmp     _pad4
	beq     L1EF7
;
; if (pad1 & PAD_LEFT || pad2 & PAD_LEFT || pad3 & PAD_LEFT || pad4 & PAD_LEFT)
;
L2137:	lda     _pad1
	and     #$02
	bne     L2138
	lda     _pad2
	and     #$02
	bne     L2138
	lda     _pad3
	and     #$02
	bne     L2138
	lda     _pad4
	and     #$02
	beq     L213A
;
; if (speed_option == SPEED_FAST)
;
L2138:	lda     _speed_option
	cmp     #$E0
	bne     L2139
;
; speed_option = SPEED_REGULAR;
;
	lda     #$A0
;
; } else if (speed_option == SPEED_REGULAR)
;
	jmp     L2146
L2139:	lda     _speed_option
	cmp     #$A0
	bne     L213A
;
; speed_option = SPEED_SLOW;
;
	lda     #$60
L2146:	sta     _speed_option
;
; force_redraw = 1;
;
	lda     #$01
	sta     _force_redraw
;
; if (pad1 & PAD_RIGHT || pad2 & PAD_RIGHT || pad3 & PAD_RIGHT || pad4 & PAD_RIGHT)
;
L213A:	lda     _pad1
	and     #$01
	bne     L213B
	lda     _pad2
	and     #$01
	bne     L213B
	lda     _pad3
	and     #$01
	bne     L213B
	lda     _pad4
	and     #$01
	beq     L1EF7
;
; if (speed_option == SPEED_SLOW)
;
L213B:	lda     _speed_option
	cmp     #$60
	bne     L213C
;
; speed_option = SPEED_REGULAR;
;
	lda     #$A0
;
; else if (speed_option == SPEED_REGULAR)
;
	jmp     L2147
L213C:	lda     _speed_option
	cmp     #$A0
	bne     L1EF7
;
; speed_option = SPEED_FAST;
;
	lda     #$E0
L2147:	sta     _speed_option
;
; force_redraw = 1;
;
	lda     #$01
	sta     _force_redraw
;
; if (force_redraw)
;
L1EF7:	lda     _force_redraw
	jeq     L213E
;
; force_redraw = 0;
;
	lda     #$00
	sta     _force_redraw
;
; ppu_off();
;
	jsr     _ppu_off
;
; clear_vram_buffer();
;
	jsr     _clear_vram_buffer
;
; pal_bg(palette_bg);
;
	lda     #<(_palette_bg)
	ldx     #>(_palette_bg)
	jsr     _pal_bg
;
; pal_spr(palette_sp);
;
	lda     #<(_palette_sp)
	ldx     #>(_palette_sp)
	jsr     _pal_spr
;
; multi_vram_buffer_horz("OPTIONS", 7, NTADR_A(12, 6));
;
	jsr     decsp3
	lda     #<(L1F08)
	ldy     #$01
	sta     (sp),y
	iny
	lda     #>(L1F08)
	sta     (sp),y
	lda     #$07
	ldy     #$00
	sta     (sp),y
	ldx     #$20
	lda     #$CC
	jsr     _multi_vram_buffer_horz
;
; multi_vram_buffer_horz("CHARACTER SPEED:", 16, NTADR_A(8, 10));
;
	jsr     decsp3
	lda     #<(L1F12)
	ldy     #$01
	sta     (sp),y
	iny
	lda     #>(L1F12)
	sta     (sp),y
	lda     #$10
	ldy     #$00
	sta     (sp),y
	ldx     #$21
	lda     #$48
	jsr     _multi_vram_buffer_horz
;
; if (speed_option == SPEED_SLOW)
;
	lda     _speed_option
	cmp     #$60
	bne     L213D
;
; multi_vram_buffer_horz("  SLOW ", 7, NTADR_A(11, 12));
;
	jsr     decsp3
	lda     #<(L1F1E)
	ldy     #$01
	sta     (sp),y
	iny
	lda     #>(L1F1E)
;
; else if (speed_option == SPEED_REGULAR)
;
	jmp     L214C
L213D:	lda     _speed_option
	cmp     #$A0
	bne     L1F28
;
; multi_vram_buffer_horz("REGULAR", 7, NTADR_A(11, 12));
;
	jsr     decsp3
	lda     #<(L1F2B)
	ldy     #$01
	sta     (sp),y
	iny
	lda     #>(L1F2B)
;
; else
;
	jmp     L214C
;
; multi_vram_buffer_horz("  FAST ", 7, NTADR_A(11, 12));
;
L1F28:	jsr     decsp3
	lda     #<(L1F36)
	ldy     #$01
	sta     (sp),y
	iny
	lda     #>(L1F36)
L214C:	sta     (sp),y
	lda     #$07
	ldy     #$00
	sta     (sp),y
	ldx     #$21
	lda     #$8B
	jsr     _multi_vram_buffer_horz
;
; multi_vram_buffer_horz("USE LEFT/RIGHT TO CHANGE", 22, NTADR_A(5, 16));
;
	jsr     decsp3
	lda     #<(L1F40)
	ldy     #$01
	sta     (sp),y
	iny
	lda     #>(L1F40)
	sta     (sp),y
	lda     #$16
	ldy     #$00
	sta     (sp),y
	ldx     #$22
	lda     #$05
	jsr     _multi_vram_buffer_horz
;
; multi_vram_buffer_horz("HOLD START 1 SECOND", 19, NTADR_A(8, 20));
;
	jsr     decsp3
	lda     #<(L1F4A)
	ldy     #$01
	sta     (sp),y
	iny
	lda     #>(L1F4A)
	sta     (sp),y
	lda     #$13
	ldy     #$00
	sta     (sp),y
	ldx     #$22
	lda     #$88
	jsr     _multi_vram_buffer_horz
;
; multi_vram_buffer_horz("TO START GAME", 13, NTADR_A(10, 22));
;
	jsr     decsp3
	lda     #<(L1F54)
	ldy     #$01
	sta     (sp),y
	iny
	lda     #>(L1F54)
	sta     (sp),y
	lda     #$0D
	ldy     #$00
	sta     (sp),y
	ldx     #$22
	lda     #$CA
	jsr     _multi_vram_buffer_horz
;
; ppu_on_all();
;
	jsr     _ppu_on_all
;
; if (pad1 & PAD_START || pad2 & PAD_START || pad3 & PAD_START || pad4 & PAD_START)
;
L213E:	lda     _pad1
	and     #$10
	bne     L213F
	lda     _pad2
	and     #$10
	bne     L213F
	lda     _pad3
	and     #$10
	bne     L213F
	lda     _pad4
	and     #$10
	beq     L2142
;
; if (!start_held)
;
L213F:	lda     _start_held
	bne     L2140
;
; start_held = 1;
;
	lda     #$01
	sta     _start_held
;
; start_hold_timer = 0;
;
	lda     #$00
	sta     _start_hold_timer
;
; start_held = 1;
;
L2140:	lda     #$01
	sta     _start_held
;
; start_hold_timer++;
;
	inc     _start_hold_timer
;
; if (start_hold_timer >= 30)
;
	lda     _start_hold_timer
	cmp     #$1E
	jcc     L1ED3
;
; sfx_play(SFX_START, 0);
;
	lda     #$08
	jsr     pusha
	lda     #$00
	jsr     _sfx_play
;
; init_game_loop();
;
	jsr     _init_game_loop
;
; break;
;
	jmp     L1ED4
;
; start_held = 0;
;
L2142:	sta     _start_held
;
; start_hold_timer = 0;
;
	sta     _start_hold_timer
;
; while (1)
;
	jmp     L1ED3
;
; prev_pad1 = pad1;
;
L1ED4:	lda     _pad1
	sta     _prev_pad1
;
; prev_pad2 = pad2;
;
	lda     _pad2
	sta     _prev_pad2
;
; prev_pad3 = pad3;
;
	lda     _pad3
	sta     _prev_pad3
;
; prev_pad4 = pad4;
;
	lda     _pad4
	sta     _prev_pad4
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ gameover_loop (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_gameover_loop: near

.segment	"CODE"

;
; ppu_wait_nmi();
;
L1F7E:	jsr     _ppu_wait_nmi
;
; pad1 = pad_poll(0); // read the first controller
;
	lda     #$00
	jsr     _pad_poll
	sta     _pad1
;
; if (pad1 & PAD_START)
;
	and     #$10
	beq     L1F7E
;
; init_title_loop();
;
	jmp     _init_title_loop

.endproc

; ---------------------------------------------------------------
; void __near__ init_game_loop (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_init_game_loop: near

.segment	"CODE"

;
; clear_background();
;
	jsr     _clear_background
;
; game_mode = MODE_GAME;
;
	lda     #$02
	sta     _game_mode
;
; team1_score = 0;
;
	lda     #$00
	sta     _team1_score
;
; team2_score = 0;
;
	sta     _team2_score
;
; game_timer = GAME_LENGTH;
;
	lda     #$63
	sta     _game_timer
;
; win_reason = WIN_DOTS; // default
;
	lda     #$00
	sta     _win_reason
;
; for (index = 0; index < 128; index++)
;
	sta     _index
L214D:	lda     _index
	cmp     #$80
	bcs     L1F96
;
; consumed_dots[index] = 0;
;
	ldy     _index
	lda     #$00
	sta     _consumed_dots,y
;
; for (index = 0; index < 128; index++)
;
	inc     _index
	jmp     L214D
;
; BoxGuy1.x = 0x4000;
;
L1F96:	ldx     #$40
	lda     #$00
	sta     _BoxGuy1
	stx     _BoxGuy1+1
;
; BoxGuy1.y = 0x2800;
;
	ldx     #$28
	sta     _BoxGuy1+2
	stx     _BoxGuy1+2+1
;
; BoxGuy2.x = 0x7000;
;
	ldx     #$70
	sta     _BoxGuy2
	stx     _BoxGuy2+1
;
; BoxGuy2.y = 0x2800;
;
	ldx     #$28
	sta     _BoxGuy2+2
	stx     _BoxGuy2+2+1
;
; BoxGuy3.x = 0xB000;
;
	ldx     #$B0
	sta     _BoxGuy3
	stx     _BoxGuy3+1
;
; BoxGuy3.y = 0x2800;
;
	ldx     #$28
	sta     _BoxGuy3+2
	stx     _BoxGuy3+2+1
;
; BoxGuy4.x = 0x8800;
;
	ldx     #$88
	sta     _BoxGuy4
	stx     _BoxGuy4+1
;
; BoxGuy4.y = 0x2800;
;
	ldx     #$28
	sta     _BoxGuy4+2
	stx     _BoxGuy4+2+1
;
; ppu_off(); // screen off
;
	jsr     _ppu_off
;
; clear_vram_buffer();
;
	jsr     _clear_vram_buffer
;
; pal_bg(palette_bg);
;
	lda     #<(_palette_bg)
	ldx     #>(_palette_bg)
	jsr     _pal_bg
;
; pal_spr(palette_sp);
;
	lda     #<(_palette_sp)
	ldx     #>(_palette_sp)
	jsr     _pal_spr
;
; load_room();
;
	jsr     _load_room
;
; set_scroll_y(0xff); // shift the bg down 1 pixel
;
	ldx     #$00
	lda     #$FF
	jsr     _set_scroll_y
;
; ppu_on_all(); // turn on screen
;
	jsr     _ppu_on_all
;
; song = SONG_MAIN_SONG;
;
	lda     #$00
	sta     _song
;
; music_play(song);
;
	jmp     _music_play

.endproc

; ---------------------------------------------------------------
; void __near__ init_options_loop (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_init_options_loop: near

.segment	"CODE"

;
; prev_pad1 = 0;
;
	lda     #$00
	sta     _prev_pad1
;
; prev_pad2 = 0;
;
	sta     _prev_pad2
;
; prev_pad3 = 0;
;
	sta     _prev_pad3
;
; prev_pad4 = 0;
;
	sta     _prev_pad4
;
; clear_background();
;
	jsr     _clear_background
;
; game_mode = MODE_OPTIONS;
;
	lda     #$01
	sta     _game_mode
;
; ppu_off(); // screen off
;
	jsr     _ppu_off
;
; pal_bg(palette_bg);
;
	lda     #<(_palette_bg)
	ldx     #>(_palette_bg)
	jsr     _pal_bg
;
; pal_spr(palette_sp);
;
	lda     #<(_palette_sp)
	ldx     #>(_palette_sp)
	jsr     _pal_spr
;
; multi_vram_buffer_horz("OPTIONS", 7, NTADR_A(12, 6));
;
	jsr     decsp3
	lda     #<(L2018)
	ldy     #$01
	sta     (sp),y
	iny
	lda     #>(L2018)
	sta     (sp),y
	lda     #$07
	ldy     #$00
	sta     (sp),y
	ldx     #$20
	lda     #$CC
	jsr     _multi_vram_buffer_horz
;
; multi_vram_buffer_horz("CHARACTER SPEED:", 16, NTADR_A(8, 10));
;
	jsr     decsp3
	lda     #<(L2022)
	ldy     #$01
	sta     (sp),y
	iny
	lda     #>(L2022)
	sta     (sp),y
	lda     #$10
	ldy     #$00
	sta     (sp),y
	ldx     #$21
	lda     #$48
	jsr     _multi_vram_buffer_horz
;
; if (speed_option == SPEED_SLOW)
;
	lda     _speed_option
	cmp     #$60
	bne     L214F
;
; multi_vram_buffer_horz("  SLOW ", 7, NTADR_A(11, 12));
;
	jsr     decsp3
	lda     #<(L202E)
	ldy     #$01
	sta     (sp),y
	iny
	lda     #>(L202E)
;
; else if (speed_option == SPEED_REGULAR)
;
	jmp     L2155
L214F:	lda     _speed_option
	cmp     #$A0
	bne     L2038
;
; multi_vram_buffer_horz("REGULAR", 7, NTADR_A(11, 12));
;
	jsr     decsp3
	lda     #<(L203B)
	ldy     #$01
	sta     (sp),y
	iny
	lda     #>(L203B)
;
; else
;
	jmp     L2155
;
; multi_vram_buffer_horz("  FAST ", 7, NTADR_A(11, 12));
;
L2038:	jsr     decsp3
	lda     #<(L2046)
	ldy     #$01
	sta     (sp),y
	iny
	lda     #>(L2046)
L2155:	sta     (sp),y
	lda     #$07
	ldy     #$00
	sta     (sp),y
	ldx     #$21
	lda     #$8B
	jsr     _multi_vram_buffer_horz
;
; multi_vram_buffer_horz("USE LEFT/RIGHT TO CHANGE", 22, NTADR_A(5, 16));
;
	jsr     decsp3
	lda     #<(L2050)
	ldy     #$01
	sta     (sp),y
	iny
	lda     #>(L2050)
	sta     (sp),y
	lda     #$16
	ldy     #$00
	sta     (sp),y
	ldx     #$22
	lda     #$05
	jsr     _multi_vram_buffer_horz
;
; multi_vram_buffer_horz("HOLD START 3 SECONDS", 20, NTADR_A(8, 20));
;
	jsr     decsp3
	lda     #<(L205A)
	ldy     #$01
	sta     (sp),y
	iny
	lda     #>(L205A)
	sta     (sp),y
	lda     #$14
	ldy     #$00
	sta     (sp),y
	ldx     #$22
	lda     #$88
	jsr     _multi_vram_buffer_horz
;
; multi_vram_buffer_horz("TO START GAME", 13, NTADR_A(10, 22));
;
	jsr     decsp3
	lda     #<(L2064)
	ldy     #$01
	sta     (sp),y
	iny
	lda     #>(L2064)
	sta     (sp),y
	lda     #$0D
	ldy     #$00
	sta     (sp),y
	ldx     #$22
	lda     #$CA
	jsr     _multi_vram_buffer_horz
;
; start_hold_timer = 0;
;
	lda     #$00
	sta     _start_hold_timer
;
; start_held = 0;
;
	sta     _start_held
;
; ppu_on_all(); // turn on screen
;
	jmp     _ppu_on_all

.endproc

; ---------------------------------------------------------------
; void __near__ init_gameover_loop (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_init_gameover_loop: near

.segment	"CODE"

;
; clear_background();
;
	jsr     _clear_background
;
; music_stop();
;
	jsr     _music_stop
;
; game_mode = MODE_GAMEOVER;
;
	lda     #$03
	sta     _game_mode
;
; ppu_off(); // screen off
;
	jsr     _ppu_off
;
; clear_vram_buffer();
;
	jsr     _clear_vram_buffer
;
; pal_bg(palette_bg);
;
	lda     #<(_palette_bg)
	ldx     #>(_palette_bg)
	jsr     _pal_bg
;
; pal_spr(palette_sp);
;
	lda     #<(_palette_sp)
	ldx     #>(_palette_sp)
	jsr     _pal_spr
;
; multi_vram_buffer_horz("GAME OVER", 9, NTADR_A(11, 8));
;
	jsr     decsp3
	lda     #<(L207E)
	ldy     #$01
	sta     (sp),y
	iny
	lda     #>(L207E)
	sta     (sp),y
	lda     #$09
	ldy     #$00
	sta     (sp),y
	ldx     #$21
	lda     #$0B
	jsr     _multi_vram_buffer_horz
;
; if (winner == ONETWO_WINNER)
;
	lda     _winner
	bne     L2158
;
; multi_vram_buffer_horz("TEAM 1 WINS!", 12, NTADR_A(9, 12));
;
	jsr     decsp3
	lda     #<(L208A)
	ldy     #$01
	sta     (sp),y
	iny
	lda     #>(L208A)
;
; else if (winner == THREEFOUR_WINNER)
;
	jmp     L2161
L2158:	lda     _winner
	cmp     #$01
	bne     L2159
;
; multi_vram_buffer_horz("TEAM 2 WINS!", 12, NTADR_A(9, 12));
;
	jsr     decsp3
	lda     #<(L2097)
	ldy     #$01
	sta     (sp),y
	iny
	lda     #>(L2097)
L2161:	sta     (sp),y
	lda     #$0C
	ldy     #$00
	sta     (sp),y
	ldx     #$21
	lda     #$89
	jsr     _multi_vram_buffer_horz
;
; if (win_reason == WIN_DOTS)
;
L2159:	lda     _win_reason
	bne     L215A
;
; multi_vram_buffer_horz("COLLECTED 100 DOTS", 18, NTADR_A(6, 14));
;
	jsr     decsp3
	lda     #<(L20A3)
	ldy     #$01
	sta     (sp),y
	iny
	lda     #>(L20A3)
	sta     (sp),y
	lda     #$12
	ldy     #$00
	sta     (sp),y
	ldx     #$21
	lda     #$C6
;
; else if (win_reason == WIN_FRIENDLY_FIRE)
;
	jmp     L2157
L215A:	lda     _win_reason
	cmp     #$01
	bne     L215B
;
; multi_vram_buffer_horz("FRIENDLY FIRE KILL", 18, NTADR_A(6, 14));
;
	jsr     decsp3
	lda     #<(L20B0)
	ldy     #$01
	sta     (sp),y
	iny
	lda     #>(L20B0)
	sta     (sp),y
	lda     #$12
	ldy     #$00
	sta     (sp),y
	ldx     #$21
	lda     #$C6
;
; else if (win_reason == WIN_ENEMY_KILL)
;
	jmp     L2157
L215B:	lda     _win_reason
	cmp     #$02
	bne     L20BA
;
; multi_vram_buffer_horz("ENEMY SEEKER KILLED", 19, NTADR_A(5, 14));
;
	jsr     decsp3
	lda     #<(L20BD)
	ldy     #$01
	sta     (sp),y
	iny
	lda     #>(L20BD)
	sta     (sp),y
	lda     #$13
	ldy     #$00
	sta     (sp),y
	ldx     #$21
	lda     #$C5
L2157:	jsr     _multi_vram_buffer_horz
;
; multi_vram_buffer_horz("PRESS START", 11, NTADR_A(10, 24));
;
L20BA:	jsr     decsp3
	lda     #<(L20C7)
	ldy     #$01
	sta     (sp),y
	iny
	lda     #>(L20C7)
	sta     (sp),y
	lda     #$0B
	ldy     #$00
	sta     (sp),y
	ldx     #$23
	lda     #$0A
	jsr     _multi_vram_buffer_horz
;
; ppu_on_all(); // turn on screen
;
	jmp     _ppu_on_all

.endproc

; ---------------------------------------------------------------
; void __near__ init_title_loop (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_init_title_loop: near

.segment	"CODE"

;
; delay(30);
;
	lda     #$1E
	jsr     _delay
;
; game_mode = MODE_TITLE;
;
	lda     #$00
	sta     _game_mode
;
; ppu_off(); // screen off
;
	jsr     _ppu_off
;
; pal_bg(palette_bg);
;
	lda     #<(_palette_bg)
	ldx     #>(_palette_bg)
	jsr     _pal_bg
;
; pal_spr(palette_sp);
;
	lda     #<(_palette_sp)
	ldx     #>(_palette_sp)
	jsr     _pal_spr
;
; multi_vram_buffer_horz("BRIAN AND ALAN GAMES", 20, NTADR_A(6, 6));
;
	jsr     decsp3
	lda     #<(L1FCA)
	ldy     #$01
	sta     (sp),y
	iny
	lda     #>(L1FCA)
	sta     (sp),y
	lda     #$14
	ldy     #$00
	sta     (sp),y
	ldx     #$20
	lda     #$C6
	jsr     _multi_vram_buffer_horz
;
; multi_vram_buffer_horz("HONEY HEIST", 11, NTADR_A(10, 8));
;
	jsr     decsp3
	lda     #<(L1FD4)
	ldy     #$01
	sta     (sp),y
	iny
	lda     #>(L1FD4)
	sta     (sp),y
	lda     #$0B
	ldy     #$00
	sta     (sp),y
	ldx     #$21
	lda     #$0A
	jsr     _multi_vram_buffer_horz
;
; multi_vram_buffer_horz("HOLD START 1 SECOND", 19, NTADR_A(8, 24));
;
	jsr     decsp3
	lda     #<(L1FDE)
	ldy     #$01
	sta     (sp),y
	iny
	lda     #>(L1FDE)
	sta     (sp),y
	lda     #$13
	ldy     #$00
	sta     (sp),y
	ldx     #$23
	lda     #$08
	jsr     _multi_vram_buffer_horz
;
; multi_vram_buffer_horz("TO GO TO OPTIONS", 16, NTADR_A(9, 26));
;
	jsr     decsp3
	lda     #<(L1FE8)
	ldy     #$01
	sta     (sp),y
	iny
	lda     #>(L1FE8)
	sta     (sp),y
	lda     #$10
	ldy     #$00
	sta     (sp),y
	ldx     #$23
	lda     #$49
	jsr     _multi_vram_buffer_horz
;
; BoxGuy1.x = 0x2800; // x = 40 (0x28)
;
	ldx     #$28
	lda     #$00
	sta     _BoxGuy1
	stx     _BoxGuy1+1
;
; BoxGuy1.y = 0xC800; // y = 200 (0xC8)
;
	ldx     #$C8
	sta     _BoxGuy1+2
	stx     _BoxGuy1+2+1
;
; BoxGuy2.x = 0x7800; // x = 120 (0x78)
;
	ldx     #$78
	sta     _BoxGuy2
	stx     _BoxGuy2+1
;
; BoxGuy2.y = 0xC800; // y = 200 (0xC8)
;
	ldx     #$C8
	sta     _BoxGuy2+2
	stx     _BoxGuy2+2+1
;
; BoxGuy3.x = 0xC800; // x = 200 (0xC8)
;
	sta     _BoxGuy3
	stx     _BoxGuy3+1
;
; BoxGuy3.y = 0xC800; // y = 200 (0xC8)
;
	sta     _BoxGuy3+2
	stx     _BoxGuy3+2+1
;
; BoxGuy4.x = 0x1801; // x = 280 (0x118)
;
	ldx     #$18
	lda     #$01
	sta     _BoxGuy4
	stx     _BoxGuy4+1
;
; BoxGuy4.y = 0xC800; // y = 200 (0xC8)
;
	ldx     #$C8
	lda     #$00
	sta     _BoxGuy4+2
	stx     _BoxGuy4+2+1
;
; start_hold_timer = 0;
;
	sta     _start_hold_timer
;
; start_held = 0;
;
	sta     _start_held
;
; ppu_on_all(); // turn on screen
;
	jmp     _ppu_on_all

.endproc

; ---------------------------------------------------------------
; void __near__ init_system (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_init_system: near

.segment	"CODE"

;
; ppu_off();
;
	jsr     _ppu_off
;
; clear_vram_buffer();
;
	jsr     _clear_vram_buffer
;
; set_vram_buffer();
;
	jsr     _set_vram_buffer
;
; bank_spr(1);
;
	lda     #$01
	jsr     _bank_spr
;
; set_scroll_y(0xff); // shift the bg down one pixel
;
	ldx     #$00
	lda     #$FF
	jsr     _set_scroll_y
;
; speed_option = SPEED_REGULAR;
;
	lda     #$A0
	sta     _speed_option
;
; ppu_on_all(); // turn on screenxw
;
	jmp     _ppu_on_all

.endproc

; ---------------------------------------------------------------
; void __near__ clear_background (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_clear_background: near

.segment	"CODE"

;
; ppu_off(); // screen off
;
	jsr     _ppu_off
;
; vram_adr(NAMETABLE_A);
;
	ldx     #$20
	lda     #$00
	jsr     _vram_adr
;
; for (tempint = 0; tempint < 1024; ++tempint)
;
	lda     #$00
	sta     _tempint
	sta     _tempint+1
L20E0:	ldx     _tempint+1
	cpx     #$04
	bcs     L20E1
;
; vram_put(0x00);
;
	lda     #$00
	jsr     _vram_put
;
; flush_vram_update2();
;
	jsr     _flush_vram_update2
;
; for (tempint = 0; tempint < 1024; ++tempint)
;
	inc     _tempint
	bne     L20E0
	inc     _tempint+1
	jmp     L20E0
;
; ppu_on_all(); // turn on screen
;
L20E1:	jmp     _ppu_on_all

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ bg_collision_sub (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_bg_collision_sub: near

.segment	"CODE"

;
; if (temp_y >= 0xf0)
;
	lda     _temp_y
	cmp     #$F0
	ldx     #$00
	bcc     L2162
;
; return 0;
;
	txa
	rts
;
; temp = tinyhoney[((temp_y >> 3) << 5) + (temp_x >> 3)];
;
L2162:	lda     _temp_y
	lsr     a
	lsr     a
	lsr     a
	jsr     aslax4
	stx     tmp1
	asl     a
	rol     tmp1
	ldx     tmp1
	sta     ptr1
	stx     ptr1+1
	lda     _temp_x
	lsr     a
	lsr     a
	lsr     a
	clc
	adc     ptr1
	sta     ptr1
	lda     #$00
	adc     ptr1+1
	clc
	adc     #>(_tinyhoney)
	sta     ptr1+1
	ldy     #<(_tinyhoney)
	lda     (ptr1),y
	sta     _temp
;
; if (temp == 0xc6 || temp == 0xc7 || temp == 0xc8 || temp == 0xc9 || temp == 0xca)
;
	cmp     #$C6
	beq     L2163
	lda     _temp
	cmp     #$C7
	beq     L2163
	cmp     #$C8
	beq     L2163
	cmp     #$C9
	beq     L2163
	cmp     #$CA
	bne     L2164
;
; return 0;
;
L2163:	ldx     #$00
	txa
	rts
;
; else if (temp == 0xb6 || temp == 0xb7 || temp == 0xb8 || temp == 0xb9 || temp == 0xba)
;
L2164:	lda     _temp
	cmp     #$B6
	beq     L2165
	cmp     #$B7
	beq     L2165
	cmp     #$B8
	beq     L2165
	cmp     #$B9
	beq     L2165
	cmp     #$BA
	beq     L2165
	ldx     #$00
	jmp     L2166
;
; return 0;
;
L2165:	ldx     #$00
	txa
	rts
;
; return 1;
;
L2166:	lda     #$01
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ bg_coll_L (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_bg_coll_L: near

.segment	"CODE"

;
; temp_x = Generic.x;
;
	lda     _Generic
	sta     _temp_x
;
; eject_L = temp_x & 0x07; // distance to next tile boundary
;
	and     #$07
	sta     _eject_L
;
; temp_y = Generic.y + 2;
;
	lda     _Generic+1
	clc
	adc     #$02
	sta     _temp_y
;
; if (bg_collision_sub())
;
	jsr     _bg_collision_sub
	tax
	beq     L2168
;
; return 1;
;
	ldx     #$00
	lda     #$01
	rts
;
; temp_y = Generic.y + Generic.height;
;
L2168:	lda     _Generic+1
	clc
	adc     _Generic+3
	sta     _temp_y
;
; temp_y -= 2;
;
	sec
	sbc     #$02
	sta     _temp_y
;
; if (bg_collision_sub())
;
	jsr     _bg_collision_sub
	tax
	beq     L216A
;
; return 1;
;
	ldx     #$00
	lda     #$01
	rts
;
; }
;
L216A:	rts

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ bg_coll_R (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_bg_coll_R: near

.segment	"CODE"

;
; temp_x = Generic.x + Generic.width;
;
	lda     _Generic
	clc
	adc     _Generic+2
	sta     _temp_x
;
; eject_R = 8 - (temp_x & 0x07); // distance to next tile boundary
;
	lda     #$08
	jsr     pusha0
	lda     _temp_x
	and     #$07
	jsr     tossuba0
	sta     _eject_R
;
; temp_y = Generic.y + 2;
;
	lda     _Generic+1
	clc
	adc     #$02
	sta     _temp_y
;
; if (bg_collision_sub())
;
	jsr     _bg_collision_sub
	tax
	beq     L216D
;
; return 1;
;
	ldx     #$00
	lda     #$01
	rts
;
; temp_y = Generic.y + Generic.height;
;
L216D:	lda     _Generic+1
	clc
	adc     _Generic+3
	sta     _temp_y
;
; temp_y -= 2;
;
	sec
	sbc     #$02
	sta     _temp_y
;
; if (bg_collision_sub())
;
	jsr     _bg_collision_sub
	tax
	beq     L216F
;
; return 1;
;
	ldx     #$00
	lda     #$01
	rts
;
; }
;
L216F:	rts

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ bg_coll_U (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_bg_coll_U: near

.segment	"CODE"

;
; temp_x = Generic.x + 2;
;
	lda     _Generic
	clc
	adc     #$02
	sta     _temp_x
;
; temp_y = Generic.y;
;
	lda     _Generic+1
	sta     _temp_y
;
; eject_U = temp_y & 0x07; // distance to next tile boundary
;
	and     #$07
	sta     _eject_U
;
; if (bg_collision_sub())
;
	jsr     _bg_collision_sub
	tax
	beq     L2171
;
; return 1;
;
	ldx     #$00
	lda     #$01
	rts
;
; temp_x = Generic.x + Generic.width;
;
L2171:	lda     _Generic
	clc
	adc     _Generic+2
	sta     _temp_x
;
; temp_x -= 2;
;
	sec
	sbc     #$02
	sta     _temp_x
;
; if (bg_collision_sub())
;
	jsr     _bg_collision_sub
	tax
	beq     L2173
;
; return 1;
;
	ldx     #$00
	lda     #$01
	rts
;
; }
;
L2173:	rts

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ bg_coll_D (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_bg_coll_D: near

.segment	"CODE"

;
; temp_x = Generic.x + 2;
;
	lda     _Generic
	clc
	adc     #$02
	sta     _temp_x
;
; temp_y = Generic.y + Generic.height;
;
	lda     _Generic+1
	clc
	adc     _Generic+3
	sta     _temp_y
;
; eject_D = 8 - (temp_y & 0x07); // distance to next tile boundary
;
	lda     #$08
	jsr     pusha0
	lda     _temp_y
	and     #$07
	jsr     tossuba0
	sta     _eject_D
;
; if (bg_collision_sub())
;
	jsr     _bg_collision_sub
	tax
	beq     L2176
;
; return 1;
;
	ldx     #$00
	lda     #$01
	rts
;
; temp_x = Generic.x + Generic.width;
;
L2176:	lda     _Generic
	clc
	adc     _Generic+2
	sta     _temp_x
;
; temp_x -= 2;
;
	sec
	sbc     #$02
	sta     _temp_x
;
; if (bg_collision_sub())
;
	jsr     _bg_collision_sub
	tax
	beq     L2178
;
; return 1;
;
	ldx     #$00
	lda     #$01
	rts
;
; }
;
L2178:	rts

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ sprite_collision (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_sprite_collision: near

.segment	"CODE"

;
; if (temp_x < temp_x2 + 8 && temp_x + 8 > temp_x2 &&
;
	lda     _temp_x
	jsr     pusha0
	lda     _temp_x2
	clc
	adc     #$08
	bcc     L1D55
	ldx     #$01
L1D55:	jsr     tosicmp
	bcs     L1D56
	ldx     #$00
	lda     _temp_x
	clc
	adc     #$08
	bcc     L1D57
	inx
L1D57:	sec
	sbc     _temp_x2
	sta     tmp1
	txa
	sbc     #$00
	ora     tmp1
	bcc     L1D56
	beq     L1D56
;
; temp_y < temp_y2 + 8 && temp_y + 8 > temp_y2)
;
	lda     _temp_y
	jsr     pusha0
	lda     _temp_y2
	clc
	adc     #$08
	bcc     L1D58
	ldx     #$01
L1D58:	jsr     tosicmp
	bcs     L1D56
	ldx     #$00
	lda     _temp_y
	clc
	adc     #$08
	bcc     L1D59
	inx
L1D59:	sec
	sbc     _temp_y2
	sta     tmp1
	txa
	sbc     #$00
	ora     tmp1
	beq     L1D56
	bcs     L1D54
L1D56:	ldx     #$00
	txa
	rts
;
; return 1;
;
L1D54:	ldx     #$00
	lda     #$01
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

;
; init_system();
;
	jsr     _init_system
;
; init_title_loop();
;
	jsr     _init_title_loop
;
; if (game_mode == MODE_TITLE)
;
L217B:	lda     _game_mode
	bne     L217C
;
; title_loop();
;
	jsr     _title_loop
;
; if (game_mode == MODE_OPTIONS)
;
L217C:	lda     _game_mode
	cmp     #$01
	bne     L217D
;
; options_loop();
;
	jsr     _options_loop
;
; if (game_mode == MODE_GAME)
;
L217D:	lda     _game_mode
	cmp     #$02
	bne     L217E
;
; game_loop();
;
	jsr     _game_loop
;
; if (game_mode == MODE_GAMEOVER)
;
L217E:	lda     _game_mode
	cmp     #$03
	bne     L217B
;
; gameover_loop();
;
	jsr     _gameover_loop
;
; while (1)
;
	jmp     L217B

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ is_dot_consumed (unsigned int)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_is_dot_consumed: near

.segment	"CODE"

;
; {
;
	jsr     pushax
;
; unsigned char byte_index = map_index >> 3; // divide by 8
;
	ldy     #$01
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     shrax3
	jsr     pusha
;
; unsigned char bit_index = map_index & 0x07; // modulo 8
;
	ldy     #$01
	lda     (sp),y
	and     #$07
	jsr     pusha
;
; return (consumed_dots[byte_index] >> bit_index) & 0x01;
;
	ldy     #$01
	lda     (sp),y
	tay
	lda     _consumed_dots,y
	sta     ptr1
	ldy     #$00
	lda     (sp),y
	tay
	lda     ptr1
L217F:	lsr     a
	dey
	bpl     L217F
	rol     a
	and     #$01
	ldx     #$00
;
; }
;
	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; void __near__ mark_dot_consumed (unsigned int)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_mark_dot_consumed: near

.segment	"CODE"

;
; {
;
	jsr     pushax
;
; unsigned char byte_index = map_index >> 3; // divide by 8
;
	ldy     #$01
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     shrax3
	jsr     pusha
;
; unsigned char bit_index = map_index & 0x07; // modulo 8
;
	ldy     #$01
	lda     (sp),y
	and     #$07
	jsr     pusha
;
; consumed_dots[byte_index] |= (0x01 << bit_index);
;
	lda     #<(_consumed_dots)
	ldx     #>(_consumed_dots)
	ldy     #$01
	clc
	adc     (sp),y
	bcc     L1CFB
	inx
L1CFB:	jsr     pushax
	sta     ptr1
	stx     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	sta     ptr1
	ldy     #$02
	lda     (sp),y
	tay
	lda     #$01
L2180:	asl     a
	dey
	bpl     L2180
	ror     a
	ora     ptr1
	ldy     #$00
	jsr     staspidx
;
; }
;
	jmp     incsp4

.endproc

